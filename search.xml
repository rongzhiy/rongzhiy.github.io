<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端复习</title>
      <link href="/2022/10/07/%E5%89%8D%E7%AB%AF%E5%A4%8D%E4%B9%A0/"/>
      <url>/2022/10/07/%E5%89%8D%E7%AB%AF%E5%A4%8D%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="前端复习"><a href="#前端复习" class="headerlink" title="前端复习"></a>前端复习</h1><h1 id="概述与基础环境"><a href="#概述与基础环境" class="headerlink" title="概述与基础环境"></a>概述与基础环境</h1><p>将会涉及的内容<br><img src="https://img-blog.csdnimg.cn/49890d53e26d42769e185d8efba4f294.png" alt="在这里插入图片描述"></p><h2 id="安装Vscode"><a href="#安装Vscode" class="headerlink" title="安装Vscode"></a>安装Vscode</h2><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p><a href="https://code.visualstudio.com/">https://code.visualstudio.com/</a></p><p>其他的安装问题不多赘述了，程序员不会装软件？我不信~</p><h3 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h3><p>为方便后续开发，建议安装如下插件</p><p><img src="https://img-blog.csdnimg.cn/5d35aa15599d437d8fecde9216420c69.png" alt="在这里插入图片描述"></p><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><p>vscode本身没有新建项目的选项，所以要先创建一个空的文件夹，如project_xxxx。</p><p>然后打开vscode，再在vscode里面选择 File -&gt; Open Folder 打开一个文件夹，这样才可以创建项目。</p><h3 id="保存工作区"><a href="#保存工作区" class="headerlink" title="保存工作区"></a>保存工作区</h3><p>打开文件夹后，选择“文件 -&gt; 将工作区另存为…”，为工作区文件起一个名字，存储在刚才的文件夹下即可<br><img src="https://img-blog.csdnimg.cn/a6b201bc6cc9405d97e2613399e5e971.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/452dcb41b3d342e38473f00c274ee874.png" alt="在这里插入图片描述"></p><h3 id="修改界面字体大小"><a href="#修改界面字体大小" class="headerlink" title="修改界面字体大小"></a>修改界面字体大小</h3><p>修改代码的大小可以在设置里进行<br>修改页面字体的大小可以通过Ctrl+加减号 来控制大小<br>修改出一个比较舒适的大小<br><img src="https://img-blog.csdnimg.cn/1a28eaee071b420dbe7996e389b9053e.png" alt="在这里插入图片描述"><br>启动运行<br><img src="https://img-blog.csdnimg.cn/55e395a54d5641d2a23a5416e07ce8b6.png" alt="在这里插入图片描述"></p><h1 id="ES6学习"><a href="#ES6学习" class="headerlink" title="ES6学习"></a>ES6学习</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>认识认识ES6的历史<br>ECMAScript 6.0（以下简称 ES6）是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript 语言可以用来编写复杂的大型应用程序，成为企业级开发语言。</p><p><strong>与JavaScript 的关系</strong></p><p>一个常见的问题是，ECMAScript 和 JavaScript 到底是什么关系？</p><p>要讲清楚这个问题，需要回顾历史。1996 年 11 月，JavaScript 的创造者 Netscape 公司，决定将 JavaScript 提交给标准化组织 ECMA，希望这种语言能够成为国际标准。次年，ECMA 发布 262 号标准文件（ECMA-262）的第一版，规定了浏览器脚本语言的标准，并将这种语言称为 ECMAScript，这个版本就是 1.0 版。</p><p>因此，ECMAScript 和 JavaScript 的关系是，前者是后者的规格，后者是前者的一种实现（另外的 ECMAScript 方言还有 Jscript 和 ActionScript）</p><p>与 ECMAScript 2015 的关系</p><p>ECMAScript 2015（简称 ES2015）这个词，也是经常可以看到的。它与 ES6 是什么关系呢？</p><p>2011 年，ECMAScript 5.1 版发布后，就开始制定 6.0 版了。因此，ES6 这个词的原意，就是指 JavaScript 语言的下一个版本。</p><p>ES6 的第一个版本，在 2015 年 6 月发布，正式名称是《ECMAScript 2015 标准》（简称 ES2015）。</p><p>2016 年 6 月，小幅修订的《ECMAScript 2016 标准》（简称 ES2016）如期发布，这个版本可以看作是 ES6.1 版，因为两者的差异非常小，基本上是同一个标准。根据计划，2017 年 6 月发布 ES2017 标准。</p><p>因此，ES6 既是一个历史名词，也是一个泛指，含义是 5.1 版以后的 JavaScript 的下一代标准，涵盖了 ES2015、ES2016、ES2017 等等，而 ES2015 则是正式名称，特指该年发布的正式版本的语言标准。</p><p>历史介绍完毕，直接学语法</p><h2 id="ES6基础语法"><a href="#ES6基础语法" class="headerlink" title="ES6基础语法"></a>ES6基础语法</h2><p>ES标准中不包含 DOM 和 BOM的定义，只涵盖基本数据类型、关键字、语句、运算符、内建对象、内建函数等通用语法。</p><p>本部分只学习前端开发中ES6的最少必要知识，方便后面项目开发中对代码的理解。</p><h3 id="let声明变量"><a href="#let声明变量" class="headerlink" title="let声明变量"></a>let声明变量</h3><p>创建 let.html<br>在ES6中，定义变量不光用var，还要用let<br>但是let出了大括号就不认识了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="comment">// var 可以声明多次 可以有两个一样的</span></span><br><span class="line">    <span class="comment">// let 只能声明一次 不可以有两个一样的</span></span><br><span class="line">        <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">let</span> b = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//控制台打印</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a) <span class="comment">// 1</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b) <span class="comment">// Identifier &#x27;b&#x27; has already been declared</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/8ba25118afc84984bfedd7481ec904e7.png" alt="在这里插入图片描述"></p><h3 id="const声明常量（只读）"><a href="#const声明常量（只读）" class="headerlink" title="const声明常量（只读）"></a>const声明常量（只读）</h3><p>常量生成完，是不许改变的<br>同时，初始值是必须赋值的，不赋值会报错</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">       &#123;</span><br><span class="line">           <span class="comment">//const声明的变量是只读变量，不允许再更改，且需要赋值</span></span><br><span class="line">           <span class="keyword">const</span> <span class="variable constant_">PI</span> = <span class="string">&quot;3.1415926&quot;</span></span><br><span class="line">           <span class="variable constant_">PI</span> = <span class="number">3</span> <span class="comment">//TypeError: Assignment to constant variable.</span></span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">//控制台打印会报错</span></span><br><span class="line">       <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable constant_">PI</span>) </span><br><span class="line">   &lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/b5cda3dbb51e4f1f9fe2afdd005f3f9f.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/80a09c2f78a746af88c5a25d5e13f046.png" alt="在这里插入图片描述"></p><h3 id="解构赋值"><a href="#解构赋值" class="headerlink" title="解构赋值"></a>解构赋值</h3><p>解构赋值是对赋值运算符的扩展。</p><p>他是一种针对数组或者对象进行模式匹配，然后对其中的变量进行赋值。</p><p>在代码书写上简洁且易读，语义更加清晰明了；也方便了复杂对象中数据字段获取。</p><p>获取的时候注意key要和对象创建时的key要对应上</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">//对象解构</span></span><br><span class="line">    <span class="keyword">let</span> user = &#123;<span class="attr">name</span>: <span class="string">&#x27;Helen&#x27;</span>, <span class="attr">age</span>: <span class="number">18</span>&#125;</span><br><span class="line">    <span class="comment">// 传统写法</span></span><br><span class="line">    <span class="keyword">let</span> name1 = user.<span class="property">name</span></span><br><span class="line">    <span class="keyword">let</span> age1 = user.<span class="property">age</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(name1, age1)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//ES6中的简写,直接可以获取到</span></span><br><span class="line">    <span class="keyword">let</span> &#123;name,age&#125;=user</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(name) </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(age) </span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/65a2a071743740ee9072107ac3e5a7fa.png" alt="在这里插入图片描述"></p><h3 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h3><p>模板字符串相当于加强版的字符串，<strong>用反引号 `</strong> ,除了作为普通字符串，还可以在字符串中加入变量和表达式。<br>注意，用的时候一定一定要引入反引号，其他的引号不生效！<br><img src="https://img-blog.csdnimg.cn/e41001804ea94f20a3d94c2b05c5d627.png" alt="在这里插入图片描述"></p><h3 id="定义方法简写"><a href="#定义方法简写" class="headerlink" title="定义方法简写"></a>定义方法简写</h3><p>ES6中也可以做出类似Java的方法编写，和类差不多，里面有属性，有方法<br>说白了就是少写了个function</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 传统</span></span><br><span class="line">    <span class="keyword">const</span> person1 = &#123;</span><br><span class="line">        <span class="comment">//属性</span></span><br><span class="line">        <span class="attr">name</span>:<span class="string">&quot;cc&quot;</span>,</span><br><span class="line">        <span class="attr">info</span>:&#123;<span class="string">&quot;aa&quot;</span>:<span class="string">&quot;aa&quot;</span>,<span class="string">&quot;bb&quot;</span>:<span class="string">&quot;bb&quot;</span>&#125;,</span><br><span class="line">        <span class="attr">sayHi</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;传统Hi&quot;</span>)</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;<span class="comment">//调用</span></span><br><span class="line">    person1.<span class="title function_">sayHi</span>();<span class="comment">//&quot;Hi&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ES6</span></span><br><span class="line">    <span class="keyword">const</span> person2 = &#123;</span><br><span class="line">        <span class="comment">//属性</span></span><br><span class="line">        <span class="attr">name</span>:<span class="string">&quot;cc&quot;</span>,</span><br><span class="line">        <span class="attr">info</span>:&#123;<span class="string">&quot;aa&quot;</span>:<span class="string">&quot;aa&quot;</span>,<span class="string">&quot;bb&quot;</span>:<span class="string">&quot;bb&quot;</span>&#125;,</span><br><span class="line">        <span class="title function_">sayHi</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;简写Hi&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="comment">//调用</span></span><br><span class="line">    person2.<span class="title function_">sayHi</span>()  <span class="comment">//&quot;Hi&quot;</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="对象拓展运算符"><a href="#对象拓展运算符" class="headerlink" title="对象拓展运算符"></a>对象拓展运算符</h3><p>拓展运算符（…）用于取出参数对象所有可遍历属性然后拷贝到当前对象。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1、拷贝对象</span></span><br><span class="line">    <span class="keyword">let</span> person1 = &#123;<span class="attr">name</span>: <span class="string">&quot;Amy&quot;</span>, <span class="attr">age</span>: <span class="number">15</span>&#125;</span><br><span class="line">    <span class="keyword">let</span> someone = &#123; ...person1 &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(someone)  <span class="comment">//&#123;name: &quot;Amy&quot;, age: 15&#125;</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h3><p>类似lamdba的箭头函数简化方法体的定义<br>箭头函数提供了一种更加简洁的函数书写方式。基本语法是：<code>参数 =&gt; 函数体</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 传统</span></span><br><span class="line">    <span class="keyword">var</span> f1=<span class="keyword">function</span>(<span class="params">a</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">f1</span>(<span class="number">111</span>))<span class="comment">//111</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// ES6</span></span><br><span class="line">    <span class="keyword">var</span> <span class="title function_">f2</span> = a =&gt; a</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">f2</span>(<span class="number">1</span>))<span class="comment">//1</span></span><br><span class="line">    <span class="keyword">var</span> <span class="title function_">f3</span> = (<span class="params">a,b</span>) =&gt; a+b</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">f3</span>(<span class="number">3</span>,<span class="number">4</span>))<span class="comment">//7</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="https://img-blog.csdnimg.cn/f17d8c08d3f3492d9a7c2285bfda1d0e.png" alt="在这里插入图片描述"></p><h1 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h1><h2 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h2><h3 id="Vue-js-是什么"><a href="#Vue-js-是什么" class="headerlink" title="Vue.js 是什么"></a>Vue.js 是什么</h3><p>Vue (读音 &#x2F;vjuː&#x2F;，类似于 view) 是一套用于构建用户界面的渐进式框架。</p><p>Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p><p>官方网站：<a href="https://cn.vuejs.org/">https://cn.vuejs.org</a></p><h3 id="环境搭建与内容抽取"><a href="#环境搭建与内容抽取" class="headerlink" title="环境搭建与内容抽取"></a>环境搭建与内容抽取</h3><p>提前把Vue的包引入进来 ，复制粘贴js文件到包下<br><img src="https://img-blog.csdnimg.cn/2d83e5031502467c86a2ef258f839ba0.png" alt="在这里插入图片描述"><br>快速开始，引入这些</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- id标识vue作用的范围 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="comment">&lt;!-- &#123;&#123;&#125;&#125; 插值表达式，绑定vue中的data数据 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;&#123; message &#125;&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;vue.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="comment">// 创建一个vue对象</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,<span class="comment">//绑定vue作用的范围</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="attr">data</span>: &#123;<span class="comment">//定义页面中显示的模型数据</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">message</span>: <span class="string">&#x27;Hello Vue!&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>但是这些都是标准的模板，写来写去就那些东西，不想重复写了怎么办<br>把这些内容抽取出来</p><p><strong>在vs code中创建代码片段：</strong></p><p>文件 &#x3D;&gt; 首选项 &#x3D;&gt; 用户代码片段 &#x3D;&gt; 新建全局代码片段&#x2F;或文件夹代码片段：vue-html.code-snippets</p><p><strong>注意：制作代码片段的时候，字符串中如果包含文件中复制过来的“Tab”键的空格，要换成“空格键”的空格</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;vue htm&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;scope&quot;</span>: <span class="string">&quot;html&quot;</span>,</span><br><span class="line">        <span class="string">&quot;prefix&quot;</span>: <span class="string">&quot;vuehtml&quot;</span>,</span><br><span class="line">        <span class="string">&quot;body&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;&lt;!DOCTYPE html&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;html lang=\&quot;en\&quot;&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;head&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;    &lt;meta charset=\&quot;UTF-8\&quot;&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;    &lt;meta name=\&quot;viewport\&quot; content=\&quot;width=device-width, initial-scale=1.0\&quot;&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;    &lt;meta http-equiv=\&quot;X-UA-Compatible\&quot; content=\&quot;ie=edge\&quot;&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;    &lt;title&gt;Document&lt;/title&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/head&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;body&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;    &lt;div id=\&quot;app\&quot;&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;    &lt;/div&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;    &lt;script src=\&quot;vue.min.js\&quot;&gt;&lt;/script&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;    &lt;script&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;        new Vue(&#123;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;            el: &#x27;#app&#x27;,&quot;</span>,</span><br><span class="line">            <span class="string">&quot;            data: &#123;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;                $1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;            &#125;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;        &#125;)&quot;</span>,</span><br><span class="line">            <span class="string">&quot;    &lt;/script&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/body&gt;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&lt;/html&gt;&quot;</span>,</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;description&quot;</span>: <span class="string">&quot;my vue template in html&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样在创建新html的时候，输入vuehtml自动生成<br><img src="https://img-blog.csdnimg.cn/157da8576adf46868ef53b25c6fef678.png" alt="在这里插入图片描述"></p><h2 id="Vue指令"><a href="#Vue指令" class="headerlink" title="Vue指令"></a>Vue指令</h2><p>抄以前的笔记，这里不想再写一遍了，节约时间<br>有相关的笔记<br><a href="https://blog.csdn.net/weixin_46906696/article/details/124447819">Vue快速入门及案例</a></p><h3 id="v-text赋值文本内容"><a href="#v-text赋值文本内容" class="headerlink" title="v-text赋值文本内容"></a>v-text赋值文本内容</h3><blockquote><p>作用：将数据设置给标签的文本内容，设置标签的文本值（textContent）</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;h2 v-text=<span class="string">&quot;绑定对象data的key+&#x27;拼接的内容&#x27;&quot;</span>&gt;内部内容测试&lt;/h2&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-text</span>=<span class="string">&quot;对象.属性值&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/7059c98ea2514f3bb6b7c69f56e1ac9a.png" alt="在这里插入图片描述"><br>表达式也可以进行拼接<br><img src="https://img-blog.csdnimg.cn/4757402617e14b7c9682aaf6b9b3b60e.png" alt="在这里插入图片描述"><br>总结：<br><img src="https://img-blog.csdnimg.cn/6155e3bda3134ae2856e2b38ae512905.png" alt="在这里插入图片描述"></p><h3 id="v-html解析html代码"><a href="#v-html解析html代码" class="headerlink" title="v-html解析html代码"></a>v-html解析html代码</h3><blockquote><p>作用：设置标签的innerHtml，能够识别并且解析html代码，而不是html代码变成文字</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;p v-html=<span class="string">&quot;绑定对象&quot;</span>&gt;这里的内容会被覆盖！&lt;/p&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-html</span>=<span class="string">&quot;绑定对象&quot;</span>&gt;</span>这里的内容会被覆盖！<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span></span><br><span class="line">...诸如此类的用法</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/cbf95da3e09a46009dcd117d05c25cd3.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/a30b42d5ecb84b63b510188420481a83.png" alt="在这里插入图片描述"><br>总结：<br><img src="https://img-blog.csdnimg.cn/bcdb5417f09d48a490c5e3ac090dca7a.png" alt="在这里插入图片描述"></p><h3 id="v-on为元素绑定事件"><a href="#v-on为元素绑定事件" class="headerlink" title="v-on为元素绑定事件"></a>v-on为元素绑定事件</h3><blockquote><p>作用：为元素绑定事件</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">      &lt;input type=<span class="string">&quot;button&quot;</span> v-<span class="attr">on</span>:触发方式=<span class="string">&quot;函数名&quot;</span> value=<span class="string">&quot;按钮内的内容&quot;</span>&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">触发方式</span>=<span class="string">&quot;函数名&quot;</span> <span class="attr">value</span>=<span class="string">&quot;按钮内的内容&quot;</span>/&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/330a3173137f423da6670a7952f0ed67.png" alt="在这里插入图片描述"><br>效果<br><img src="https://img-blog.csdnimg.cn/8539f4799af3481e805eeb7b07abe7d4.png" alt="在这里插入图片描述"><br>如何获取同一个app对象下（挂载数据）的内容呢?</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">this</span>.<span class="property">data</span>数据中的key就可以获取</span><br></pre></td></tr></table></figure><p>案例：<br><img src="https://img-blog.csdnimg.cn/357357f6b6ce40589adb45fc24234311.png" alt="在这里插入图片描述"><br>总结：<br><img src="https://img-blog.csdnimg.cn/c7f20c3698384b20b33ae5359cc307d1.png" alt="在这里插入图片描述"></p><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p><img src="https://img-blog.csdnimg.cn/1da458d2b358445b931559814392e0f4.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/76ac7d6debe94332a1154976241f1526.png" alt="在这里插入图片描述"></p><h3 id="实现一个计数器"><a href="#实现一个计数器" class="headerlink" title="实现一个计数器"></a>实现一个计数器</h3><p>计数器长这个样子<br><img src="https://img-blog.csdnimg.cn/a2fed6d5b26748b983106aeed5b94c45.png" alt="在这里插入图片描述"><br>body体里面的代码，其他头部的代码没啥用，这里不赘述了<br>这里改了一点点需求，加随便加，减不能减过0<br><img src="https://img-blog.csdnimg.cn/fe8086059a574f3382992e5010d90a77.png" alt="在这里插入图片描述"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;add()&quot;</span>&gt;</span>+<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">v-text</span>=<span class="string">&quot;result&quot;</span>&gt;</span>&#123;&#123;result&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;sub()&quot;</span>&gt;</span>-<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">result</span>: <span class="number">10</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">add</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">this</span>.<span class="property">result</span>++;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">sub</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="property">result</span>==<span class="number">0</span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">alert</span>(<span class="string">&quot;已经为0了，不能再减!&quot;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">return</span> <span class="number">0</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">this</span>.<span class="property">result</span>--;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>还就那个效果拔群<br><img src="https://img-blog.csdnimg.cn/11406e25302d4b37a76d577ba4e4170e.png" alt="在这里插入图片描述"><br>总结<br><img src="https://img-blog.csdnimg.cn/d055a5a4847e4283990ea95724e50927.png" alt="在这里插入图片描述"></p><h3 id="v-show元素显示和隐藏"><a href="#v-show元素显示和隐藏" class="headerlink" title="v-show元素显示和隐藏"></a>v-show元素显示和隐藏</h3><blockquote><p>表达式的真假来切换元素的显示状态标签内部的一个元素，true和false来标示元素是否能够显示<br>注意：频繁切换的话用v-show更好</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v-show=<span class="string">&quot;true（显示）/false（不显示）&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/f4cc4f03b5b1444485b170f77e97d6b8.png" alt="在这里插入图片描述"><br>定义在data中<br><img src="https://img-blog.csdnimg.cn/c282dd8652104236ad3c0fad40c0a1ad.png" alt="在这里插入图片描述"><br>同时也支持表达式的运算<br><img src="https://img-blog.csdnimg.cn/df4de90ec3aa468cb941a0d31e5af29f.png" alt="在这里插入图片描述"><br>实例：<br><img src="https://img-blog.csdnimg.cn/6fdc2fa4f1124570bfa38039504db0c3.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b5be68fedbf84e6ca40dc99dc7de163e.png" alt="在这里插入图片描述"><br>切换显示效果的小demo<br>需求是按键来切换元素的显示<br>这里只写body体内部的代码，其他的部分写出来意义不大<br>单击按钮实现图片的显示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;isShowEl()&quot;</span>&gt;</span>&quot;是否显示元素？&quot;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片路径&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;isShow&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">isShow</span>:<span class="literal">false</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">isShowEl</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">this</span>.<span class="property">isShow</span>=!<span class="variable language_">this</span>.<span class="property">isShow</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>总结：<br><img src="https://img-blog.csdnimg.cn/b856eeba24f145cebca404054a0fc462.png" alt="在这里插入图片描述"></p><h3 id="v-if元素显示和隐藏"><a href="#v-if元素显示和隐藏" class="headerlink" title="v-if元素显示和隐藏"></a>v-if元素显示和隐藏</h3><p>根据表达式的真假，切换元素的显示和隐藏</p><blockquote><p>v-if是来操作不频繁切换的元素更好<br>注意：频繁切换的话用v-show更好<br>原理就是操纵dom树，加入display：none属性，不显示的时候就改为true</p></blockquote><p>v-show与v-if的区别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1.手段：v-if是通过控制dom节点的存在与否来控制元素的显隐；v-show是通过设置DOM元素的display样式，block为显示，none为隐藏；</span><br><span class="line">2.编译过程：v-if切换有一个局部编译/卸载的过程，切换过程中合适地销毁和重建内部的事件监听和子组件；v-show只是简单的基于css切换；</span><br><span class="line">3.编译条件：v-if是惰性的，如果初始条件为假，则什么也不做；只有在条件第一次变为真时才开始局部编译（编译被缓存？编译被缓存后，然后再切换的时候进行局部卸载); v-show是在任何条件下（首次条件是否为真）都被编译，然后被缓存，而且DOM元素保留；</span><br><span class="line">4.性能消耗：v-if有更高的切换消耗；v-show有更高的初始渲染消耗；</span><br></pre></td></tr></table></figure><p>语法和上面的v-show差不多<br><img src="https://img-blog.csdnimg.cn/22cb5afd4c444987ad0326f125aa501c.png" alt="在这里插入图片描述"><br>总结<br><img src="https://img-blog.csdnimg.cn/06c943de9e924dc2b3756799232432f9.png" alt="在这里插入图片描述"></p><h3 id="v-bind操纵属性"><a href="#v-bind操纵属性" class="headerlink" title="v-bind操纵属性"></a>v-bind操纵属性</h3><p>设置元素的属性<br>语法：<br><img src="https://img-blog.csdnimg.cn/8f907e0f343c46b5b19337a5971cd6d8.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/dd043b30905f4844b0268b4c87d7a54f.png" alt="在这里插入图片描述"><br>简略写法<br><img src="https://img-blog.csdnimg.cn/dca9fb9a1877466d95a16d995e4b9be8.png" alt="在这里插入图片描述"><br>成功操纵样式的显示<br><img src="https://img-blog.csdnimg.cn/9796989770b842dca48d5233517f51ea.png" alt="在这里插入图片描述"><br>总结<br><img src="https://img-blog.csdnimg.cn/70e51c722155452e87beb0038b352b0e.png" alt="在这里插入图片描述"></p><h3 id="实现一个图片切换案例"><a href="#实现一个图片切换案例" class="headerlink" title="实现一个图片切换案例"></a>实现一个图片切换案例</h3><p>长这个样子<br><img src="https://img-blog.csdnimg.cn/a050ea00ca254e02b402fbe58c4214d9.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/9026c018531e4049b6e6505aa462e745.png" alt="在这里插入图片描述"><br>具体思路：<br><img src="https://img-blog.csdnimg.cn/a23ac23531aa4670939c828d54385157.png" alt="在这里插入图片描述"><br>老规矩，只写body里的代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;preImg()&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;index!=0&quot;</span>&gt;</span>切换上一张<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">v-bind:src</span>=<span class="string">imgArray[index]</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;nextImg()&quot;</span> <span class="attr">v-show</span>=<span class="string">&quot;index!=imgArray.length-1&quot;</span>&gt;</span>切换下一张<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">    &lt;!-- 开发环境版本，包含了有帮助的命令行警告 --&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">imgArray</span>:[</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="string">&quot;./img/01.png&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="string">&quot;./img/02.png&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="string">&quot;./img/03.png&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="string">&quot;./img/04.png&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="string">&quot;./img/05.png&quot;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">],</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">index</span>:<span class="number">0</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">preImg</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">this</span>.<span class="property">index</span>--;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="attr">nextImg</span>:<span class="keyword">function</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="variable language_">this</span>.<span class="property">index</span>++;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>单机按钮来切换上下张<br><img src="https://img-blog.csdnimg.cn/971ba06b6f834fffb4faecf18cc6f4c7.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/df336936f0c745669d1e95138a881e45.png" alt="在这里插入图片描述"><br><strong>亮点：用v-bind来动态的操作img标签内的src元素的属性是最重要的</strong><br>总结：<br><img src="https://img-blog.csdnimg.cn/cddd07e392f44c5ea4f10d35a808bc24.png" alt="在这里插入图片描述"></p><h3 id="v-for"><a href="#v-for" class="headerlink" title="v-for"></a>v-for</h3><blockquote><p>响应式的根据数据生成列表结构</p></blockquote><p>因为是要显示列表，这里回顾一下无序列表的语法</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>需要显示的条目内容<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">li：list litm的缩写：条目列表。list：列表；item:条目</span><br></pre></td></tr></table></figure><p>语法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">&quot;(对象名称随便起,下标名称随便起) in 数组名&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">测试v-for:&#123;&#123; 上面起的对象名 &#125;&#125;</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span></span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/220e4bf38af144b490f9807b9b67fe39.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/b5bed14d8a3b4994a0668d53880f91d4.png" alt="在这里插入图片描述"><br>总结：<br><img src="https://img-blog.csdnimg.cn/bc9075500a5249fd88efa598e1469f46.png" alt="在这里插入图片描述"></p><h3 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h3><blockquote><p>作用：把表单中的值和实例中的数据关联起来（双向数据绑定）</p></blockquote><p><img src="https://img-blog.csdnimg.cn/f72e0ed522fc44bdb9e19aaaf065b649.png" alt="在这里插入图片描述"><br>案例<br><img src="https://img-blog.csdnimg.cn/f8a8611a2baf40a0859b2ec079355d81.png" alt="在这里插入图片描述"><br>总结：<br><img src="https://img-blog.csdnimg.cn/573d9461def44b39b290e338b157c7ce.png" alt="在这里插入图片描述"></p><h2 id="Vue的生命周期"><a href="#Vue的生命周期" class="headerlink" title="Vue的生命周期"></a>Vue的生命周期</h2><p>抄个作业<br><img src="https://img-blog.csdnimg.cn/38a0e747b91d4bf0974d75198cc6cb1b.png" alt="在这里插入图片描述"></p><p>主要的生命周期方法就这两个<br><img src="https://img-blog.csdnimg.cn/1c68d3b70e5a428382f561271d945335.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/8f04b1f005384d668db514d1b91f03c0.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/4ad5fed2dbd04365b0f7e68fb8d18992.png" alt="在这里插入图片描述"><br>放行之后，渲染完成<br><img src="https://img-blog.csdnimg.cn/2a6991363b04496699b8c4ebc9202fc3.png" alt="在这里插入图片描述"><br>控制台也可以正常输出了<br><img src="https://img-blog.csdnimg.cn/097b6908575546019b0c04e0f9d6036d.png" alt="在这里插入图片描述"></p><h2 id="Vue组件"><a href="#Vue组件" class="headerlink" title="Vue组件"></a>Vue组件</h2><p>组件可以扩展 HTML 元素，封装可重用的代码。组件系统让我们可以用独立可复用的小组件来构建大型应用，几乎任意类型的应用的界面都可以抽象为一个组件树</p><p>说白了就是自定义一个HTML标签<br><img src="https://img-blog.csdnimg.cn/1fe814a41717477ea71ce585a30d8b28.png" alt="在这里插入图片描述"></p><p>定义：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">    <span class="comment">// 定义局部组件，这里可以定义多个局部组件</span></span><br><span class="line">    <span class="attr">components</span>: &#123;</span><br><span class="line">        <span class="comment">//组件的名字</span></span><br><span class="line">        <span class="string">&#x27;自定义名字&#x27;</span>: &#123;</span><br><span class="line">            <span class="comment">//组件的内容</span></span><br><span class="line">            <span class="attr">template</span>: <span class="string">&#x27;&lt;ul&gt;&lt;li&gt;首页&lt;/li&gt;&lt;li&gt;学员管理&lt;/li&gt;&lt;/ul&gt;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    &lt;自定义组件名称&gt;&lt;/自定义组件名称&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/e23a7efb8fd44ad58ea15e450efe21c6.png" alt="在这里插入图片描述"></p><h2 id="Vue路由"><a href="#Vue路由" class="headerlink" title="Vue路由"></a>Vue路由</h2><p>Vue.js 路由允许我们通过不同的 URL 访问不同的内容。</p><p>通过 Vue.js 可以实现多视图的单页Web应用（single page web application，SPA）。</p><p>Vue.js 路由需要载入 vue-router 库</p><p>创建 路由.html</p><p><img src="https://img-blog.csdnimg.cn/7a12ff4fb73a492ba365ab3687450e99.png" alt="在这里插入图片描述"><br>使用步骤<br><strong>引入js</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;vue.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;vue-router.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>编写HTML</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=<span class="string">&quot;app&quot;</span>&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello App!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- 使用 router-link 组件来导航. --&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- 通过传入 `to` 属性指定链接. --&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="comment">&lt;!-- &lt;router-link&gt; 默认会被渲染成一个 `&lt;a&gt;` 标签 --&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/&quot;</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/student&quot;</span>&gt;</span>会员管理<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">&quot;/teacher&quot;</span>&gt;</span>讲师管理<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 路由出口 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="comment">&lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>编写JS</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 1. 定义（路由）组件。</span></span><br><span class="line">    <span class="comment">// 可以从其他文件 import 进来</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">Welcome</span> = &#123; <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;欢迎&lt;/div&gt;&#x27;</span> &#125;</span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">Student</span> = &#123; <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;student list&lt;/div&gt;&#x27;</span> &#125;</span><br><span class="line">    <span class="keyword">const</span> <span class="title class_">Teacher</span> = &#123; <span class="attr">template</span>: <span class="string">&#x27;&lt;div&gt;teacher list&lt;/div&gt;&#x27;</span> &#125;</span><br><span class="line">    <span class="comment">// 2. 定义路由</span></span><br><span class="line">    <span class="comment">// 每个路由应该映射一个组件。</span></span><br><span class="line">    <span class="keyword">const</span> routes = [</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>, <span class="attr">redirect</span>: <span class="string">&#x27;/welcome&#x27;</span> &#125;, <span class="comment">//设置默认指向的路径</span></span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/welcome&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Welcome</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/student&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Student</span> &#125;,</span><br><span class="line">        &#123; <span class="attr">path</span>: <span class="string">&#x27;/teacher&#x27;</span>, <span class="attr">component</span>: <span class="title class_">Teacher</span> &#125;</span><br><span class="line">    ]</span><br><span class="line">    <span class="comment">// 3. 创建 router 实例，然后传 `routes` 配置</span></span><br><span class="line">    <span class="keyword">const</span> router = <span class="keyword">new</span> <span class="title class_">VueRouter</span>(&#123;</span><br><span class="line">        routes <span class="comment">// （缩写）相当于 routes: routes</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 4. 创建和挂载根实例。</span></span><br><span class="line">    <span class="comment">// 从而让整个应用都有路由功能</span></span><br><span class="line">    <span class="keyword">const</span> app = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span><br><span class="line">        router</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 现在，应用已经启动了！</span></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="Axios"><a href="#Axios" class="headerlink" title="Axios"></a>Axios</h1><p>这里只介绍快速使用，这个案例里有具体的用法<br><a href="https://blog.csdn.net/weixin_46906696/article/details/124447819">Vue快速入门及案例</a></p><p>axios是独立于vue的一个项目，基于promise用于浏览器和node.js的http客户端</p><ul><li>在浏览器中可以帮助我们完成 ajax请求的发送</li><li>在node.js中可以向远程接口发送请求</li></ul><p>导入依赖</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;vue.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>写个json，给请求做数据响应<br><img src="https://img-blog.csdnimg.cn/f50ddec3e270442c8eca2cbe3d5e84dc.png" alt="在这里插入图片描述"><br>JS部分代码（Get请求版本）</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;vue.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">   <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       <span class="keyword">var</span> app=<span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">           <span class="attr">el</span>:<span class="string">&quot;#app&quot;</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">           <span class="attr">data</span>: &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">               <span class="attr">memberList</span>: []<span class="comment">//数组</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">           &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">           <span class="title function_">created</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">               <span class="variable language_">this</span>.<span class="title function_">getList</span>()<span class="comment">//页面渲染前就调用当前Vue中的getList方法</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">           &#125;,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">           <span class="attr">methods</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">               <span class="title function_">getList</span>(<span class="params"></span>)&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                   <span class="comment">//vm = this</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                   <span class="comment">//axios.get(&#x27;请求路径&#x27;)</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                   axios.<span class="title function_">get</span>(<span class="string">&#x27;test.json&#x27;</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                       .<span class="title function_">then</span>(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                       <span class="comment">//请求成功</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                       <span class="variable language_">console</span>.<span class="title function_">log</span>(response)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                       <span class="comment">//此时去前端控制台，已经可以打印数据了</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                       <span class="variable language_">this</span>.<span class="property">memberList</span> = response.<span class="property">data</span>.<span class="property">data</span>.<span class="property">name</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                   &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                   .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                       <span class="comment">//请求失败</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                       <span class="variable language_">console</span>.<span class="title function_">log</span>(error)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                   &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">               &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">           &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">       &#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>获取数据显示一下<br><img src="https://img-blog.csdnimg.cn/e6766ffb8d4e4aac8c712a5479b71995.png" alt="在这里插入图片描述"></p><h1 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h1><h2 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a>概述</h2><p>什么是Node.js</p><p>简单的说 Node.js 就是运行在服务端的 JavaScript。</p><p>Node.js是一个事件驱动I&#x2F;O服务端JavaScript环境，基于Google的V8引擎，V8引擎执行Javascript的速度非常快，性能非常好。</p><p>浏览器的内核包括两部分核心：</p><ul><li>DOM渲染引擎；</li><li>js解析器（js引擎）</li><li>js运行在浏览器中的内核中的js引擎内部</li></ul><p><strong>Node.js有什么用</strong></p><p>如果你是一个前端程序员，你不懂得像PHP、Python或Ruby等动态编程语言，然后你想创建自己的服务，那么Node.js是一个非常好的选择。</p><p>Node.js 是运行在服务端的 JavaScript，如果你熟悉Javascript，那么你将会很容易的学会Node.js。</p><p>当然，如果你是后端程序员，想部署一些高性能的服务，那么学习Node.js也是一个非常好的选择。</p><p>Node.js类似于JRE，专门给JS做运行环境的，也可以作为后端开发使用</p><h2 id="下载安装Node-js"><a href="#下载安装Node-js" class="headerlink" title="下载安装Node.js"></a>下载安装Node.js</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>官网：<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></p><p>中文网：<a href="http://nodejs.cn/">http://nodejs.cn/</a></p><p>LTS：长期支持版本</p><p>Current：最新版</p><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>安装和查看版本<br><img src="https://img-blog.csdnimg.cn/ed4e397ee6c840c99c6efe26ad020e71.png" alt="在这里插入图片描述"></p><h3 id="简单入门"><a href="#简单入门" class="headerlink" title="简单入门"></a>简单入门</h3><p>新建一个js文件</p><p><img src="https://img-blog.csdnimg.cn/089ac72b6350401481b7a1ea22dc67f7.png" alt="在这里插入图片描述"><br>进入到程序所在的目录，输入</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node <span class="number">01</span>.js</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/56ee7d7c9e0a46468f2fb4e7629a189d.png" alt="在这里插入图片描述"><br>可以发现，无需网页，就可以很好的运行js文件</p><h3 id="Vscode使用Nodejs"><a href="#Vscode使用Nodejs" class="headerlink" title="Vscode使用Nodejs"></a>Vscode使用Nodejs</h3><p>在Vscode里也可以完成相关操作<br><img src="https://img-blog.csdnimg.cn/575bbf8b24fd45b2ba80b744d9a3b991.png" alt="在这里插入图片描述"></p><h3 id="Vscode使用Nodejs的相关问题"><a href="#Vscode使用Nodejs的相关问题" class="headerlink" title="Vscode使用Nodejs的相关问题"></a>Vscode使用Nodejs的相关问题</h3><p><img src="https://img-blog.csdnimg.cn/fd8b2ed6a108443d915fe6f2544e05ee.png" alt="在这里插入图片描述"></p><h1 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h1><h2 id="概述-3"><a href="#概述-3" class="headerlink" title="概述"></a>概述</h2><h3 id="什么是NPM"><a href="#什么是NPM" class="headerlink" title="什么是NPM"></a>什么是NPM</h3><p>NPM全称Node Package Manager，是Node.js包管理工具，是全球最大的模块生态系统，里面所有的模块都是开源免费的；也是Node.js的包管理工具，相当于前端的Maven 来管理各种src引入的依赖。</p><h2 id="安装NPM"><a href="#安装NPM" class="headerlink" title="安装NPM"></a>安装NPM</h2><p>我们通过npm 可以很方便地下载js库，管理前端工程。</p><p>Node.js默认安装的npm包和工具的位置：Node.js目录\node_modules</p><ul><li>在这个目录下你可以看见 npm目录，npm本身就是被NPM包管理器管理的一个工具，说明 Node.js已经集成了npm工具</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">在命令提示符输入 npm -v 可查看当前npm版本</span></span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>Vscode中的继承命令窗口<br><img src="https://img-blog.csdnimg.cn/b7989c27ea77461bb618f9e7c58cf31a.png" alt="在这里插入图片描述"></p><h2 id="NPM管理项目"><a href="#NPM管理项目" class="headerlink" title="NPM管理项目"></a>NPM管理项目</h2><h3 id="项目初始化"><a href="#项目初始化" class="headerlink" title="项目初始化"></a>项目初始化</h3><p>创建文件夹npm</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">建立一个空文件夹，在命令提示符进入该文件夹  执行命令初始化</span></span><br><span class="line">npm init</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">按照提示输入相关信息，如果是用默认值则直接回车即可。</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">name: 项目名称</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">version: 项目版本号</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">description: 项目描述</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">keywords: &#123;Array&#125;关键词，便于用户搜索到我们的项目</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">最后会生成package.json文件，这个是包的配置文件，相当于maven的pom.xml</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">我们之后也可以根据需要进行修改。</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果想直接按默认的生成 package.json 文件，那么可以使用命令</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">这样就不需要后续的确认了</span></span><br><span class="line">npm init -y</span><br></pre></td></tr></table></figure><h3 id="修改npm镜像"><a href="#修改npm镜像" class="headerlink" title="修改npm镜像"></a>修改npm镜像</h3><p>NPM官方的管理的包都是从 <a href="http://npmjs.com下载的,但是这个网站在国内速度很慢./">http://npmjs.com下载的，但是这个网站在国内速度很慢。</a></p><p>这里推荐使用淘宝 NPM 镜像 <a href="http://npm.taobao.org/">http://npm.taobao.org/</a> ，淘宝 NPM 镜像是一个完整 npmjs.com 镜像，同步频率目前为 10分钟一次，以保证尽量与官方服务同步。</p><p><strong>设置镜像地址：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">经过下面的配置，以后所有的 npm install 都会经过淘宝的镜像地址下载</span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看npm配置信息</span></span><br><span class="line">npm config list</span><br></pre></td></tr></table></figure><h3 id="npm-install命令的使用"><a href="#npm-install命令的使用" class="headerlink" title="npm install命令的使用"></a>npm install命令的使用</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用 npm install 安装依赖包的最新版，</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">模块安装的位置：项目目录\node_modules</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装会自动在项目目录下添加 package-lock.json文件，这个文件帮助锁定安装包的版本</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">同时package.json 文件中，依赖包会被添加到dependencies节点下，类似maven中的 &lt;dependencies&gt;</span></span><br><span class="line">npm install jquery</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">npm管理的项目在备份和传输的时候一般不携带node_modules文件夹</span></span><br><span class="line">npm install #根据package.json中的配置下载依赖，初始化项目</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">如果安装时想指定特定的版本</span></span><br><span class="line">npm install jquery@2.1.x</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">局部安装</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">devDependencies节点：开发时的依赖包，项目打包到生产环境的时候不包含的依赖</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用 -D参数将依赖添加到devDependencies节点</span></span><br><span class="line">npm install --save-dev eslint</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">或</span></span><br><span class="line">npm install -D eslint</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">全局安装</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Node.js全局安装的npm包和工具的位置：用户目录\AppData\Roaming\npm\node_modules</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">一些命令行工具常使用全局安装的方式</span></span><br><span class="line">npm install -g webpack</span><br><span class="line">            --global</span><br></pre></td></tr></table></figure><p>下载一个JQuery依赖<code>npm install jquery</code><br>这个时候，package-lock.json（前端版Pom）新的依赖信息就进来了<br><img src="https://img-blog.csdnimg.cn/af10e0ba157844c0adb4162d3435e787.png" alt="在这里插入图片描述"></p><h3 id="其它命令"><a href="#其它命令" class="headerlink" title="其它命令"></a>其它命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">更新包（更新到最新版本）</span></span><br><span class="line">npm update 包名</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">全局更新</span></span><br><span class="line">npm update -g 包名</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">卸载包</span></span><br><span class="line">npm uninstall 包名</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">全局卸载</span></span><br><span class="line">npm uninstall -g 包名</span><br></pre></td></tr></table></figure><h1 id="模块化开发"><a href="#模块化开发" class="headerlink" title="模块化开发"></a>模块化开发</h1><h2 id="概述-4"><a href="#概述-4" class="headerlink" title="概述"></a>概述</h2><p>着网站逐渐变成”互联网应用程序”，嵌入网页的Javascript代码越来越庞大，越来越复杂。<br>Javascript模块化编程，已经成为一个迫切的需求。理想情况下，开发者只需要实现核心的业务逻辑，其他都可以加载别人已经写好的模块。<br>但是，Javascript不是一种模块化编程语言，它不支持”类”（class），包（package）等概念，更遑论”模块”（module）了。</p><p>传统非模块化开发有如下的缺点：</p><ul><li>命名冲突</li><li>文件依赖</li></ul><p>模块化规范：</p><ul><li>CommonJS模块化规范</li><li>ES6模块化规范</li></ul><h2 id="ES5模块化写法"><a href="#ES5模块化写法" class="headerlink" title="ES5模块化写法"></a>ES5模块化写法</h2><p>先初始化一下工程 ES6也是如此<br><img src="https://img-blog.csdnimg.cn/1ebbc0bd7ff34adaaf43543cfee86c59.png" alt="在这里插入图片描述"></p><p>每个文件就是一个模块，有自己作用域。在一个文件里定义的变量、函数、类，都是私有的，对其他文件不可见。如果不设置的话，其他js文件是调用不了的。<br>在ES5模块化中，创建两个js文件<br>一个01.js，另一个02.js，01中的方法可以被02调用<br>01.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义两个成员函数：</span></span><br><span class="line"><span class="keyword">const</span> sum = <span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseInt</span>(a) + <span class="built_in">parseInt</span>(b)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> subtract = <span class="keyword">function</span>(<span class="params">a,b</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseInt</span>(a) - <span class="built_in">parseInt</span>(b)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义可以被外界JS访问的函数</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>=&#123;</span><br><span class="line">    sum,</span><br><span class="line">    subtract</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>02.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//把01的函数引进来，类似于import的操作</span></span><br><span class="line"><span class="comment">//同时用对象进行接收，方便后续调用。./ 代表当前路径</span></span><br><span class="line"><span class="keyword">const</span> m=<span class="built_in">require</span>(<span class="string">&quot;./01.js&quot;</span>)</span><br><span class="line"><span class="comment">//调用</span></span><br><span class="line"><span class="keyword">const</span> sumResult=m.<span class="title function_">sum</span>(<span class="number">1</span>,<span class="number">2</span>)</span><br><span class="line"><span class="keyword">const</span> subtractResult=m.<span class="title function_">subtractResult</span>(<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sumResult)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(subtractResult)</span><br></pre></td></tr></table></figure><p>node 02.js运行一下<br><img src="https://img-blog.csdnimg.cn/4ae2fa0c0a704b4b9e1091eb61d9c35f.png" alt="在这里插入图片描述"></p><h2 id="ES6模块化写法"><a href="#ES6模块化写法" class="headerlink" title="ES6模块化写法"></a>ES6模块化写法</h2><p>还是一样需要初始化工程<br>创建es6-01.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加入export就可以被其他js文件读取，类似访问权限控制</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">test1</span>(<span class="params">a</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">test2</span>(<span class="params">b</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建es6-02.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//import &#123;函数1，函数2&#125; from &quot;文件路径&quot;</span></span><br><span class="line"><span class="keyword">import</span> &#123;test1,test2&#125; <span class="keyword">from</span> <span class="string">&quot;./es6-01.js&quot;</span></span><br><span class="line"><span class="comment">//直接可以调用</span></span><br><span class="line"><span class="title function_">test1</span>(<span class="number">123</span>)</span><br><span class="line"><span class="title function_">test2</span>(<span class="number">456</span>)</span><br></pre></td></tr></table></figure><p>node运行一下<br><img src="https://img-blog.csdnimg.cn/a7e56ed1d5754b58a221c3cb98bdc883.png" alt="在这里插入图片描述"></p><h3 id="安装Babel"><a href="#安装Babel" class="headerlink" title="安装Babel"></a>安装Babel</h3><p>Babel是一个广泛使用的转码器，可以将ES6代码转为ES5代码，从而在现有环境执行执行</p><p>Babel提供babel-cli工具，用于命令行转码。它的安装命令如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --global babel-cli</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看是否安装成功</span></span><br><span class="line">babel --version</span><br></pre></td></tr></table></figure><h4 id="配置-babelrc"><a href="#配置-babelrc" class="headerlink" title="配置.babelrc"></a>配置.babelrc</h4><p>Babel的配置文件是.babelrc，存放在项目的根目录下，该文件用来设置转码规则和插件，presets字段设定转码规则，将es2015规则加入 .babelrc：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;presets&quot;</span>: [<span class="string">&quot;es2015&quot;</span>],</span><br><span class="line">    <span class="string">&quot;plugins&quot;</span>: []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="安装转码器"><a href="#安装转码器" class="headerlink" title="安装转码器"></a>安装转码器</h4><p>在项目中安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev babel-preset-es2015</span><br></pre></td></tr></table></figure><h4 id="转码"><a href="#转码" class="headerlink" title="转码"></a>转码</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">整个目录转码</span></span><br><span class="line">mkdir dist1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">--out-dir 或 -d 参数指定输出目录</span></span><br><span class="line">babel src -d dist1</span><br></pre></td></tr></table></figure><h4 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node dist1/userComponent.js</span><br></pre></td></tr></table></figure><h3 id="其他写法"><a href="#其他写法" class="headerlink" title="其他写法"></a>其他写法</h3><p>01.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//加入export就可以被其他js文件的对象调用了</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span><br><span class="line">    <span class="title function_">fun1</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fun1&quot;</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">fun2</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fun2&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>02.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//import 对象 from &quot;文件路径&quot;</span></span><br><span class="line"><span class="keyword">import</span> user <span class="keyword">from</span> <span class="string">&quot;./es6-01.js&quot;</span></span><br><span class="line"><span class="comment">//通过对象来调用</span></span><br><span class="line">user.<span class="title function_">fun1</span>()</span><br><span class="line">user.<span class="title function_">fun2</span>()</span><br></pre></td></tr></table></figure><p>同样，想使用也需要转码成ES5</p><h1 id="前端基础搭建（后台）"><a href="#前端基础搭建（后台）" class="headerlink" title="前端基础搭建（后台）"></a>前端基础搭建（后台）</h1><h2 id="vue-admin-template模板"><a href="#vue-admin-template模板" class="headerlink" title="vue-admin-template模板"></a>vue-admin-template模板</h2><p>vue-admin-template是基于vue-element-admin的一套后台管理系统基础模板（最少精简版），可作为模板进行二次开发。</p><p><img src="https://img-blog.csdnimg.cn/88aba2d12a444b328bd41637927e49fe.png" alt="在这里插入图片描述"></p><p>GitHub地址：<a href="https://github.com/PanJiaChen/vue-admin-template">https://github.com/PanJiaChen/vue-admin-template</a></p><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p>把文件复制到Vscode下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压压缩包</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入目录</span></span><br><span class="line">cd vue-admin-template-master</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动。执行后，浏览器自动弹出并访问http://localhost:9528/</span></span><br><span class="line">npm run dev</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/02c6d2e8de7b4572b2ccafb7edfcf8e4.png" alt="在这里插入图片描述"><br>引入成功之后，运行起来<br><img src="https://img-blog.csdnimg.cn/1fae7e48f33346cf8ee33ff56cd6fb84.png" alt="在这里插入图片描述"></p><h2 id="登陆改造"><a href="#登陆改造" class="headerlink" title="登陆改造"></a>登陆改造</h2><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>原先的登陆数据是用mook.json也就是模拟文件<br>现在自己写两个后端接口专门去返回这种成功登陆的模拟Json<br>具体位置在：<img src="https://img-blog.csdnimg.cn/e9983db8c7ea4988aa93a34c5cb250a5.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/536aa840461d4b5980028c794df6e4f0.png" alt="在这里插入图片描述"></p><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><p>前端主要是修改请求路径<br><img src="https://img-blog.csdnimg.cn/1425dbace1d24003969b401c45236d54.png" alt="在这里插入图片描述"><br>除此之外还要修改js文件中的请求路径<br><img src="https://img-blog.csdnimg.cn/2c5a080cdaf6437ea3e70fca70affaeb.png" alt="在这里插入图片描述"><br>总结一下<br><img src="https://img-blog.csdnimg.cn/db7e915c49674579841c9fdcf06e9ada.png" alt="在这里插入图片描述"></p><h3 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h3><p>登陆出现跨域问题有待解决<br><img src="https://img-blog.csdnimg.cn/936d2d4ac3324590976ee3b36915b4d1.png" alt="在这里插入图片描述"></p><h2 id="跨域问题解决"><a href="#跨域问题解决" class="headerlink" title="跨域问题解决"></a>跨域问题解决</h2><p>先说说什么是跨域<br>原地址的信息（协议、IP、端口号），与目的地址的信息（协议、IP、端口号）有任何一个对不上都叫跨域<br><img src="https://img-blog.csdnimg.cn/c5f239843490475ea0cabfa0856577df.png" alt="在这里插入图片描述"><br>加入注解，就解决跨域问题可以登陆了<br><img src="https://img-blog.csdnimg.cn/5e00fde04d094df0aad38e4de2a96bb8.png" alt="在这里插入图片描述"></p><h1 id="前端开发（后台）"><a href="#前端开发（后台）" class="headerlink" title="前端开发（后台）"></a>前端开发（后台）</h1><h2 id="讲师页面"><a href="#讲师页面" class="headerlink" title="讲师页面"></a>讲师页面</h2><h3 id="基础搭建"><a href="#基础搭建" class="headerlink" title="基础搭建"></a>基础搭建</h3><p>在路由中添加管理路由<br><img src="https://img-blog.csdnimg.cn/535ce7676c1b42e1a126ae62f8a5aae9.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/13128a7990e947bb91eff7ada370c2dd.png" alt="在这里插入图片描述"><br>新建文件，测试一下<br>可以发现，点击不同路由跳转不同页面<br><img src="https://img-blog.csdnimg.cn/89a31649524f4b509aa59874e5dc0d9f.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/d66d6249b9fb46f3b493afd9a4589b37.png" alt="在这里插入图片描述"></p><h3 id="JS文件"><a href="#JS文件" class="headerlink" title="JS文件"></a>JS文件</h3><p>js在专门的API包下单独写，新建出来文件<br><img src="https://img-blog.csdnimg.cn/5d3e6e1182714c84a05ecf1af3009e0d.png" alt="在这里插入图片描述"><br>分页JS<br>路径和请求方式要和后端的请求对应上<br><img src="https://img-blog.csdnimg.cn/cef3f1217d7f48e9a9c979f0e9eb741e.png" alt="在这里插入图片描述"><br>前端${想取的内容} 可以取到想取到的内容，比如公共路径、比如方法参数<br><img src="https://img-blog.csdnimg.cn/6dfe8d6412964f20bf800401db027409.png" alt="在这里插入图片描述"></p><p>回到讲师列表，在样式下方引入script标签<br>把最基本的结构搭建好<img src="https://img-blog.csdnimg.cn/7205049cc9ef4299aa992fc5577af00d.png" alt="在这里插入图片描述"><br>引入数据，函数调用等等内容，完成分页的调用<br>具体的显示样式我这里不做说明，太多了。CV一下<br>页面位置：<code>src\views\vod\teacher\list.vue</code><br>JS位置：<code>src\api\vod\teacher.js</code><br><img src="https://img-blog.csdnimg.cn/f8194cb58ccf428b97c928a55720c8f8.png" alt="在这里插入图片描述"></p><h3 id="分页组件"><a href="#分页组件" class="headerlink" title="分页组件"></a>分页组件</h3><p>引入组件<br><img src="https://img-blog.csdnimg.cn/65278b77b1af49d2924c3aa0d656f8b3.png" alt="在这里插入图片描述"><br>编写相应的函数，这期间还引入了模糊查询的框等内容，不多赘述了<br><img src="https://img-blog.csdnimg.cn/2ff47a4494f049fa9b9abc2358214017.png" alt="在这里插入图片描述"></p><h4 id="小Bug"><a href="#小Bug" class="headerlink" title="小Bug"></a>小Bug</h4><h5 id="跨域Bug"><a href="#跨域Bug" class="headerlink" title="跨域Bug"></a>跨域Bug</h5><p>后台之前是Login接口加跨域了，Teacher接口没加跨域，记得加一下<br><img src="https://img-blog.csdnimg.cn/d72bfec1ffb74ab89cdf0a11e62d16f3.png" alt="在这里插入图片描述"></p><h5 id="分页Bug"><a href="#分页Bug" class="headerlink" title="分页Bug"></a>分页Bug</h5><p>忘记写MP配置类了，分页分了半天没分出来<br>还以为mp出问题了，结果一看，MP的分页配置类没写<br><img src="https://img-blog.csdnimg.cn/1635bf1ce1314248845b818fb5ddcfd5.png" alt="在这里插入图片描述"><br>蚌埠住了，没写配置类<br><img src="https://img-blog.csdnimg.cn/538500b162264fd1b3e6c5a862554c24.png" alt="在这里插入图片描述"><br>加上配置类就好了<br><img src="https://img-blog.csdnimg.cn/9a905a89b86c4955bd30f9236e0be2c9.png" alt="在这里插入图片描述"></p><h3 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h3><p>完美解决跨域以及分页问题，功能测试通过<br><img src="https://img-blog.csdnimg.cn/7611295209c142fd87a5b56f9851cb90.png" alt="在这里插入图片描述"></p><h3 id="讲师删除功能"><a href="#讲师删除功能" class="headerlink" title="讲师删除功能"></a>讲师删除功能</h3><p>这里引入ElementUI中的确认弹框，在删除之前进行确认，避免误操作<br>复制的代码我就不在这里赘述了<br><img src="https://img-blog.csdnimg.cn/a3543034aed843bcae6ce5f1603d491b.png" alt="在这里插入图片描述"><br>回到JS文件，把功能补齐<br><img src="https://img-blog.csdnimg.cn/93fc5525857741478912dfdd6a9c0ec9.png" alt="在这里插入图片描述"><br>回到页面，对方法进行调用<br><img src="https://img-blog.csdnimg.cn/c176703ae07e4820adcaf7e5119ebd14.png" alt="在这里插入图片描述"></p><h3 id="讲师添加功能"><a href="#讲师添加功能" class="headerlink" title="讲师添加功能"></a>讲师添加功能</h3><p>先来JS中添加逻辑<br><img src="https://img-blog.csdnimg.cn/9c29ceddcae34393a9d12b89636f9f04.png" alt="在这里插入图片描述"><br>回到讲师添加页面，复制样式进去<br>再把Script标签引入<br><img src="https://img-blog.csdnimg.cn/89ebba7a0972437f9e6c27d1c293c65b.png" alt="在这里插入图片描述"></p><h3 id="讲师修改功能"><a href="#讲师修改功能" class="headerlink" title="讲师修改功能"></a>讲师修改功能</h3><p>修改工程包括修改和数据回显<br>这个跳转页面通过<strong>隐藏路由</strong>来实现<br>也就是看不见那个菜单栏（导航栏），但也可以带着id传递<br>隐藏路由要在路由中添加<br><img src="https://img-blog.csdnimg.cn/697563db5f5a4acf85cdee62c2a52541.png" alt="在这里插入图片描述"><br>教师列表中触发隐藏路由内容<br><img src="https://img-blog.csdnimg.cn/d09f8a739c52445bb224927e1c31bc3f.png" alt="在这里插入图片描述"><br>先写JS的回显功能<br><img src="https://img-blog.csdnimg.cn/4e0476f3dabe447b85981a859b58062b.png" alt="在这里插入图片描述"><br>再写更新操作<br><img src="https://img-blog.csdnimg.cn/a7bab3390c3d4700ae24435d38402f34.png" alt="在这里插入图片描述"></p><p>表单页面<br>页面渲染前获取数据<br><img src="https://img-blog.csdnimg.cn/54473b4187124e609d3036da50aae42f.png" alt="在这里插入图片描述"><br>最后的回显以及保存更新功能<br><img src="https://img-blog.csdnimg.cn/919e7872239146cfa67527d24c2975af.png" alt="在这里插入图片描述"><br>优化保存更新操作</p><p><img src="https://img-blog.csdnimg.cn/2a181c3c8d864a0c9f28e24472d757b3.png" alt="在这里插入图片描述"><br>测试一下，修改成功<br><img src="https://img-blog.csdnimg.cn/1e9cabc8c8d84efc97634fa223208155.png" alt="在这里插入图片描述"></p><h3 id="教师删除操作"><a href="#教师删除操作" class="headerlink" title="教师删除操作"></a>教师删除操作</h3><p>先在JS中定义好批量删除<br><img src="https://img-blog.csdnimg.cn/8a66910b7d954495a8612ba1b839ca2e.png" alt="在这里插入图片描述"><br>初始化组件src&#x2F;views&#x2F;vod&#x2F;teacher&#x2F;list.vue<br>在table组件上添加 <strong>批量删除 按钮</strong><br><img src="https://img-blog.csdnimg.cn/80ffed2bd7aa4bec85bd3de4af259f72.png" alt="在这里插入图片描述"><br>table标签上加入复选框<br><img src="https://img-blog.csdnimg.cn/beae167f35be446a9287b7023624e132.png" alt="在这里插入图片描述"></p><p>在页面中新定义数据，data数组来保存要被删除的id<br><img src="https://img-blog.csdnimg.cn/7f5f19d0528041e2b4f34374014ff473.png" alt="在这里插入图片描述"><br>完善批量删除方法</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 批量删除</span></span><br><span class="line"><span class="title function_">batchRemove</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">multipleSelection</span>.<span class="property">length</span> === <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">warning</span>(<span class="string">&#x27;请选择要删除的记录！&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="variable language_">this</span>.$confirm(<span class="string">&#x27;此操作将永久删除该记录, 是否继续?&#x27;</span>, <span class="string">&#x27;提示&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">confirmButtonText</span>: <span class="string">&#x27;确定&#x27;</span>,</span><br><span class="line">    <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>,</span><br><span class="line">    <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 点击确定，远程调用ajax</span></span><br><span class="line">    <span class="comment">// 遍历selection，将id取出放入id列表</span></span><br><span class="line">    <span class="keyword">var</span> idList = []</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">multipleSelection</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">      idList.<span class="title function_">push</span>(item.<span class="property">id</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">// 调用api</span></span><br><span class="line">    <span class="keyword">return</span> teacherApi.<span class="title function_">batchRemove</span>(idList)</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="title function_">fetchData</span>()</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">success</span>(response.<span class="property">message</span>)</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (error === <span class="string">&#x27;cancel&#x27;</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">$message</span>.<span class="title function_">info</span>(<span class="string">&#x27;取消删除&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">// 当多选选项发生变化的时候调用</span></span><br><span class="line"><span class="title function_">handleSelectionChange</span>(<span class="params">selection</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(selection)</span><br><span class="line">  <span class="variable language_">this</span>.<span class="property">multipleSelection</span> = selection</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>以上部分是前端开发过程中的示例，剩下的前端都CV，不自己写了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java面试课程</title>
      <link href="/2022/10/01/JAVA%E9%9D%A2%E8%AF%95%E8%AF%BE%E7%A8%8B/"/>
      <url>/2022/10/01/JAVA%E9%9D%A2%E8%AF%95%E8%AF%BE%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="有哪些-Java-优质面试视频推荐？"><a href="#有哪些-Java-优质面试视频推荐？" class="headerlink" title="有哪些 Java 优质面试视频推荐？"></a>有哪些 Java 优质面试视频推荐？</h1><p>文字看累了，还可以看看视频！推荐几个不错的 Java 面试相关的视频。</p><p><strong>1、中华石杉老师的《Java 面试突击第一季》</strong></p><p>即使是19年那会出来的视频，放到现在依然是适用的！对于想要进 Java 生态为主的公司比如美团、阿里非常有帮助！主要讲的是高并发高可用相关的内容。</p><p>地址：<a href="https://www.bilibili.com/video/BV1B4411h7Nz">https://www.bilibili.com/video/BV1B4411h7Nz</a><br><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028885295-0a3f1462-ee2d-45fe-b507-e7133a4e29b6.png#clientId=u7b40d553-effc-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=357&id=u03de1bdb&margin=%5Bobject%20Object%5D&name=image.png&originHeight=446&originWidth=966&originalType=binary&ratio=1&rotation=0&showTitle=false&size=262142&status=done&style=none&taskId=ubdf2ec97-52ac-4650-90b2-920bd075e0a&title=&width=772.8" alt="image.png"></p><p>这份资料对应的笔记：<a href="https://doocs.github.io/advanced-java/#/">https://doocs.github.io/advanced-java/#/</a><br><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028936583-9ef64bab-f6ea-4b57-ba1f-83a9454adc74.png#clientId=u7b40d553-effc-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=631&id=ua0479cfc&margin=%5Bobject%20Object%5D&name=image.png&originHeight=789&originWidth=941&originalType=binary&ratio=1&rotation=0&showTitle=false&size=324946&status=done&style=none&taskId=u6f6ccb65-b84b-4f15-b631-116e41f076f&title=&width=752.8" alt="image.png"></p><p><strong>2、图灵学院的《Java 常见面试题详解系列》</strong></p><p>涵盖 Java 核心知识、数据库以及常见框架，拿数据库和缓存来说：数据库以面试常问的 MySQL 为例介绍了索引、锁、事务、主从同步、MyISAM 和 InnoDB 的区别、分库分表、慢查询处理等面试题。缓存以面试常问的 Redis 为例介绍了 Redis 常见数据库结构、缓存过期策略、 缓存穿透、缓存击穿、缓存雪崩、数据库和缓存一致性保证、Redis 高可用等面试题。</p><p>地址：<a href="https://www.bilibili.com/video/BV1XU4y1J7Dr">https://www.bilibili.com/video/BV1XU4y1J7Dr</a></p><p><strong>3、尚硅谷周阳老师的 《Java 面试题第三季》</strong><br><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028903655-b1db0e8d-e613-44e7-8f0f-171d85ce52d1.png#clientId=u7b40d553-effc-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=290&id=u2b17c5e5&margin=%5Bobject%20Object%5D&name=image.png&originHeight=363&originWidth=1033&originalType=binary&ratio=1&rotation=0&showTitle=false&size=184517&status=done&style=none&taskId=udfe3cf33-3acf-49b9-8b50-be0113dc69f&title=&width=826.4" alt="image.png"></p><p>Java 培训领域比较出名的周阳老师的作品，内容涵盖算法、Java 核心知识、数据库以及常见框架。</p><p>可以重点看看并发和 Spring 这块，比其他老师讲的要深入和好理解很多。</p><p>地址：<a href="https://www.bilibili.com/video/BV1Hy4y1B78T">https://www.bilibili.com/video/BV1Hy4y1B78T</a></p><p><strong>前两季视频地址</strong> ：</p><p>● Java 面试题第一季 ：<a href="https://www.bilibili.com/video/BV1Eb411P7bP">https://www.bilibili.com/video/BV1Eb411P7bP</a><br>● Java 面试题第二季 ：<a href="https://www.bilibili.com/video/BV18b411M7xz">https://www.bilibili.com/video/BV18b411M7xz</a></p><p><strong>4、图灵的《分布式面试核心面试题系列》</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028916188-5694f554-b265-4902-85b8-517c5b13bdbf.png#clientId=u7b40d553-effc-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=374&id=u4f040e7a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=468&originWidth=983&originalType=binary&ratio=1&rotation=0&showTitle=false&size=184993&status=done&style=none&taskId=u1cef61e9-a63d-4036-9c9c-9781c3edcfa&title=&width=786.4" alt="image.png"></p><p>主要是分布式相关的内容，涵盖负载均衡、分布式 ID、分布式事务、Dubbo、Zookeeper 、Redis。</p><p>地址：<a href="https://www.bilibili.com/video/BV1Mz4y1Z7bM">https://www.bilibili.com/video/BV1Mz4y1Z7bM</a></p><p><strong>5、享学的《Java 面试全解析系列》</strong></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028947744-053fc68b-2701-41ce-b8d8-b2ee0270a06c.png#clientId=u7b40d553-effc-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=331&id=uf2e40fb1&margin=%5Bobject%20Object%5D&name=image.png&originHeight=414&originWidth=951&originalType=binary&ratio=1&rotation=0&showTitle=false&size=188352&status=done&style=none&taskId=ubf0b3479-d6a0-46cf-8da3-3995a5d1c25&title=&width=760.8" alt="image.png"></p><p>内容比较杂，可以挑选自己比较感兴趣面试题学习。可以重点看看数据库这块，对于常见的 MySQL 面试题比如 MySQL 索引数据结构介绍的比较详细。</p><p>地址：<a href="https://www.bilibili.com/video/BV1yA411u7WL">https://www.bilibili.com/video/BV1yA411u7WL</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有哪些优质 Java 实战项目推荐？</title>
      <link href="/2022/10/01/%E4%BC%98%E8%B4%A8JAVA%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/"/>
      <url>/2022/10/01/%E4%BC%98%E8%B4%A8JAVA%E5%AE%9E%E6%88%98%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p><strong>开源项目</strong></p><p><strong>社区</strong></p><p><a href="https://t.zsxq.com/zb2fMzr">upupor</a> 是一个小众但是功能强大，代码质量也还可以的开源社区，挺适合作为学习的项目。 最主要的是这个项目目前知名度非常非常低，没有项目经历的小伙伴也可以改造升级一下拿来作为自己的项目经历。</p><p>Github 地址：<a href="https://github.com/yangrunkang/upupor">https://github.com/yangrunkang/upupor</a> 。</p><p>技术栈：</p><p>●后端：Spring Boot + MySQL + Redis + Undertow（Web容器）<br>●前端 ：Thymeleaf（模板引擎，方便 SEO）+ Bootstrap</p><p>在线演示：<a href="https://upupor.com/">https://upupor.com</a> 。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028300855-0e490da2-b6b9-40c6-b298-7f50b7ff891c.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=u9b1d55ed&margin=%5Bobject%20Object%5D&name=1.png&originHeight=1221&originWidth=1378&originalType=binary&ratio=1&rotation=0&showTitle=false&size=137630&status=done&style=none&taskId=u12041505-345d-4b45-a30f-26a4c174e37&title=" alt="1.png"></p><p>网站的性能也是不错的：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028323294-52009511-0d7f-4bd5-b8da-21fe319d3fed.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=uf50c62fa&margin=%5Bobject%20Object%5D&name=1.png&originHeight=843&originWidth=1142&originalType=binary&ratio=1&rotation=0&showTitle=false&size=42592&status=done&style=none&taskId=ud1d6a456-ee89-4e02-8a72-131226336fd&title=" alt="1.png"></p><p>类似的社区类小众但有两点的项目还有 <a href="https://github.com/rymcu/forest">forest</a>。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028342800-cfd0f07b-92bf-4afb-b454-89698f361903.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=uc026e41b&margin=%5Bobject%20Object%5D&name=1.png&originHeight=285&originWidth=1248&originalType=binary&ratio=1&rotation=0&showTitle=false&size=23419&status=done&style=none&taskId=uaf693339-3001-4e8c-8b12-7e14445d2c6&title=" alt="1.png"></p><p>不同于其他社区项目，forest 这个知识社区项目主打文章分享，可以自定义专题和作品集。看得出来作者维护比较认真，并且很有想法。根据项目首页介绍，这个项目未来还可能会增加专业知识题库、社区贡献系统、会员系统。</p><p>我大概浏览了一下这个项目代码，发现这个项目的代码写的也相对比较规范干净，比很多 star 数量比较多的社区类项目都要好太多！</p><p>Github 地址：<a href="https://github.com/rymcu">https://github.com/rymcu</a> 。</p><p>技术栈：</p><p>●后端： SpringBoot + Shrio + MyBatis + JWT + Redis<br>●前端：Vue + NuxtJS + Element-UI。</p><p>在线演示：<a href="https://rymcu.com/">https://rymcu.com/</a> 。</p><p><strong>小说网站</strong></p><p><a href="https://t.zsxq.com/iufIi2R">novel-plus</a> 是一个开源的小说网站项目。这个项目的代码质量也是非常不错的，结果清晰，代码结构也比较规范。这是我推荐这个项目很大的一个原因。</p><p>●Github 地址：<a href="https://github.com/201206030/novel-plus">https://github.com/201206030/novel-plus</a><br>●Gitee 地址：<a href="https://gitee.com/novel_dev_team/novel-plus">https://gitee.com/novel_dev_team&#x2F;novel-plus</a></p><p>另外，除了单体版之外，这个项目还有一个基于 Spring Cloud 的微服务版本供你学习使用。</p><p>●GitHub 地址： <a href="https://github.com/201206030/novel-cloud">https://github.com/201206030/novel-cloud</a><br>●Gitee 地址： <a href="https://gitee.com/novel_dev_team/novel-cloud">https://gitee.com/novel_dev_team&#x2F;novel-cloud</a></p><p>技术栈：</p><p>●后端： SpringBoot + MyBatis +Spring Security + Elasticsearch+ 支付宝支付<br>●前端：Thymeleaf + Layui。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028367799-dfc76d78-bec1-4fcf-8939-008129bd0a20.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=442&id=u41ff1b65&margin=%5Bobject%20Object%5D&name=image.png&originHeight=552&originWidth=956&originalType=binary&ratio=1&rotation=0&showTitle=false&size=260627&status=done&style=none&taskId=ude180500-c5f3-4609-8aad-08c8032a7ca&title=&width=764.8" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028374627-6685421c-90d0-424f-a36f-4aa4be08013f.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=386&id=ub6d31d3b&margin=%5Bobject%20Object%5D&name=image.png&originHeight=483&originWidth=1017&originalType=binary&ratio=1&rotation=0&showTitle=false&size=179684&status=done&style=none&taskId=uffac6210-08d7-4ad8-889e-4f965b8569b&title=&width=813.6" alt="image.png"></p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028379941-674f3f80-19fc-4526-8fe0-32bf476f2ca6.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=353&id=u47330456&margin=%5Bobject%20Object%5D&name=image.png&originHeight=441&originWidth=957&originalType=binary&ratio=1&rotation=0&showTitle=false&size=103597&status=done&style=none&taskId=u104583c1-4223-4f77-8414-be1d78670ef&title=&width=765.6" alt="image.png"><br>这个项目还有一个爬虫模块用于系统初期测试使用。对Java爬虫感兴趣的朋友，可以简单研究一下。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028385662-2b61bff1-7895-4e5b-bb92-b0c6e2328bc9.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=347&id=ua1aecfaf&margin=%5Bobject%20Object%5D&name=image.png&originHeight=434&originWidth=573&originalType=binary&ratio=1&rotation=0&showTitle=false&size=58677&status=done&style=none&taskId=u7dbf3ae1-c9dd-4239-b5d1-a949a171a22&title=&width=458.4" alt="image.png"></p><p><strong>本地缓存</strong></p><p><a href="https://t.zsxq.com/RfyRrrv">cache</a> 是一个不错的轮子类项目，使用 Java 手写一个类似于 Redis 的单机版本地缓存(附详细教程)。 麻雀虽小五张俱全，支持数据缓存、缓存失效时间、数据淘汰策略（如FIFO 、 LRU ）、RDB 和 AOF 持久化……。 并且，这个项目附带了 6 篇教程来讲解核心功能具体是怎么实现的。</p><p>Github地址：<a href="https://github.com/houbb/cache">https://github.com/houbb/cache</a><br><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028398127-bf1b790d-a3e4-4415-b06f-13282cd3bbbd.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=565&id=uc0a59e98&margin=%5Bobject%20Object%5D&name=image.png&originHeight=706&originWidth=987&originalType=binary&ratio=1&rotation=0&showTitle=false&size=190942&status=done&style=none&taskId=uc85a67a4-a532-4a5f-a626-7a985149de0&title=&width=789.6" alt="image.png"></p><p><strong>导航网站</strong></p><p><a href="https://t.zsxq.com/FEYBYbU">geshanzsq-nav</a> 是一个前后端分离的导航网站。这个项目同样非常小众，撞车的概率非常小，并且，质量也是非常高。</p><p>●Github 地址：<a href="https://github.com/geshanzsq/geshanzsq-nav">https://github.com/geshanzsq/geshanzsq-nav</a><br>●Gitee 地址 ：<a href="https://gitee.com/geshanzsq/geshanzsq-nav">https://gitee.com/geshanzsq/geshanzsq-nav</a></p><p>技术栈：</p><p>●后端： SpringBoot + MyBatis +Spring Security + Spring Security + Redis + Jwt<br>●前端：Thymeleaf + Layui。</p><p>在线演示：<a href="https://gesdh.cn/">https://gesdh.cn/</a> 。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028409192-536245ce-2286-4f68-b25e-756a37834fdb.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=531&id=u9086e336&margin=%5Bobject%20Object%5D&name=image.png&originHeight=664&originWidth=982&originalType=binary&ratio=1&rotation=0&showTitle=false&size=196059&status=done&style=none&taskId=u835ccd18-d2c5-4228-abe2-7349910daa9&title=&width=785.6" alt="image.png"></p><p><strong>音乐网站</strong></p><p><a href="https://t.zsxq.com/YfqVzrV">music-website</a> 是一个开源的音乐网站。这个项目的前端写的挺不错的，后端稍微差劲很多，虽然也把功能写出来了，但是很多实现都不太优雅（详见 Controller 层）。</p><p>如果你想要将这个项目作为自己的项目经验或者毕业设计的话，可以自行对后端的代码进行优化。</p><p>Github 地址：<a href="https://github.com/Yin-Hongwei/music-website">https://github.com/Yin-Hongwei/music-website</a> 。</p><p>技术栈：</p><p>●后端 ：SpringBoot + MyBatis + MySQL<br>●前端 ：Vue3.0 + TypeScript + Vue-Router + Vuex + Axios + ElementPlus + Echarts</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028417074-36dd77de-b347-4f8e-9c87-c43486011e00.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=430&id=u25fb31ca&margin=%5Bobject%20Object%5D&name=image.png&originHeight=538&originWidth=962&originalType=binary&ratio=1&rotation=0&showTitle=false&size=546742&status=done&style=none&taskId=u737a3ee5-4e6e-4f5f-a9e0-31e0450a40b&title=&width=769.6" alt="image.png"></p><p><strong>RPC框架</strong></p><p>guide-rpc-framework 是一款基于 Netty+Kyro+Zookeeper 实现的 RPC 框架。</p><p>●Github 地址:  <a href="https://github.com/Snailclimb/guide-rpc-framework">https://github.com/Snailclimb/guide-rpc-framework</a><br>●Gitee 地址 ：<a href="https://gitee.com/SnailClimb/guide-rpc-framework">https://gitee.com/SnailClimb/guide-rpc-framework</a></p><p>这个项目代码注释详细，结构清晰，并且集成了 Check Style 规范代码结构，非常适合阅读和学习。</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028452393-e6f7318c-49e2-4508-8904-97b346221f81.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=u811d1494&margin=%5Bobject%20Object%5D&name=1.png&originHeight=1426&originWidth=1094&originalType=binary&ratio=1&rotation=0&showTitle=false&size=955298&status=done&style=none&taskId=u95c11c69-7c90-4eb3-befb-89afc033da6&title=" alt="1.png"></p><p>并且，这个项目的 README 文档写的也非常认真。从 README 文档中，你就可以大概了解到这个 RPC 框架的设计思路以及前置技术。<br><img src="https://cdn.nlark.com/yuque/0/2022/png/22521494/1650028479905-c72d3f64-44f4-440f-9c9b-e3066d3843bb.png#clientId=udb5327c9-266e-4&crop=0&crop=0&crop=1&crop=1&from=ui&id=u4ab2c383&margin=%5Bobject%20Object%5D&name=1.png&originHeight=1852&originWidth=914&originalType=binary&ratio=1&rotation=0&showTitle=false&size=562303&status=done&style=none&taskId=uc88a9773-0ecf-4cd8-9e3f-10c17233c73&title=" alt="1.png"></p><p><strong>视频</strong></p><p>大家有没有比较好的实战项目视频分享推荐下？慕课网上面的实战课程虽然多，但是，说实话哈，有一些质量都不过关，价格也不便宜。求球友分享优质的实战项目视频教程。</p><p>●<a href="https://mp.weixin.qq.com/s/B-Gzw20xKIPC_w4b_8bJiA">电商系统 &amp; 金融系统</a><br>●<a href="https://t.zsxq.com/zFIAubi">在线教育系统 &amp; 预约挂号系统 &amp; 云原生实战</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu18.4遇到的问题</title>
      <link href="/2022/10/01/ubuntu18.4%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
      <url>/2022/10/01/ubuntu18.4%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>初始安装时：<img src="https://cdn.nlark.com/yuque/0/2022/png/1143997/1649304979905-181ce88c-17dd-425f-8b1e-13b531557098.png#clientId=u6d078e06-09ae-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=248&id=u173ba25a&margin=%5Bobject%20Object%5D&name=image.png&originHeight=372&originWidth=1065&originalType=binary&ratio=1&rotation=0&showTitle=false&size=58134&status=done&style=none&taskId=uc6b10b8f-fa7a-4039-b897-e7b3fd08db6&title=&width=710" alt="image.png"><br>启用NAT网络设置：<br><img src="https://cdn.nlark.com/yuque/0/2022/png/1143997/1649305053308-9c55a28a-1841-465b-8cdf-70848063d8e3.png#clientId=u6d078e06-09ae-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=625&id=u3a7a2cf4&margin=%5Bobject%20Object%5D&name=image.png&originHeight=938&originWidth=1220&originalType=binary&ratio=1&rotation=0&showTitle=false&size=149970&status=done&style=none&taskId=u3e580369-beb2-48bb-8621-b3f41bdd9a5&title=&width=813.3333333333334" alt="image.png"></p><h2 id="修改更新源"><a href="#修改更新源" class="headerlink" title="修改更新源"></a>修改更新源</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#先备份</span><br><span class="line">sudo cp  /etc/apt/sources.<span class="built_in">list</span>  /etc/apt/sources.<span class="built_in">list</span>.backup</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo gedit /etc/apt/sources.<span class="built_in">list</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta"># sources.list </span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiverse</span></span><br><span class="line"></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="进程被占用"><a href="#进程被占用" class="headerlink" title="进程被占用"></a>进程被占用</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1143997/1649305683825-c6bb94ed-8d68-4560-8caf-673e9a0fc31b.png#clientId=u6d078e06-09ae-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=197&id=u6771a94c&margin=%5Bobject%20Object%5D&name=image.png&originHeight=296&originWidth=852&originalType=binary&ratio=1&rotation=0&showTitle=false&size=105522&status=done&style=none&taskId=u7f5b336d-ba36-4090-bf11-c8aea63e928&title=&width=568" alt="image.png"></p><h2 id="网络问题："><a href="#网络问题：" class="headerlink" title="网络问题："></a>网络问题：</h2><p>桥接模式失效，无奈启用NAT模式</p><p><img src="https://cdn.nlark.com/yuque/0/2022/png/1143997/1649305799140-6fab699d-18a6-4f7d-955c-e23797c3a945.png#clientId=u6d078e06-09ae-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=399&id=u64cf7bda&margin=%5Bobject%20Object%5D&name=image.png&originHeight=599&originWidth=1030&originalType=binary&ratio=1&rotation=0&showTitle=false&size=75929&status=done&style=none&taskId=u6711d50f-4fc4-4443-a3d2-c3025c64ead&title=&width=686.6666666666666" alt="image.png"></p><p>使用nmcli，该命令可以完成网卡上所有的配置工作，并且可以写入配置文件，永久生效</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo nmcli networking off</span><br><span class="line">sudo nmcli networking on</span><br></pre></td></tr></table></figure><p>最简单操作–&gt;终端直接运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service network-manager restart</span><br></pre></td></tr></table></figure><h3 id="如未解决请继续往下看"><a href="#如未解决请继续往下看" class="headerlink" title="如未解决请继续往下看"></a>如未解决请继续往下看</h3><p>1.虚拟机使用Ubuntu 18.04时,网络图标总消失,查询各种方法后,自己总结下以备己用:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo service network-manager stop</span><br><span class="line">sudo <span class="built_in">rm</span> /var/lib/NetworkManager/NetworkManager.state</span><br><span class="line">sudo service network-manager start</span><br><span class="line"></span><br><span class="line">sudo gedit /etc/NetworkManager/NetworkManager.conf</span><br><span class="line">把<span class="literal">false</span>改成<span class="literal">true</span></span><br><span class="line"></span><br><span class="line">sudo service network-manager restart</span><br></pre></td></tr></table></figure><p><strong>2.当然了</strong>,如果想windows接入了互联网,也要把虚拟机的网络适配器配置为NAT(Network Address Translation)模式,Ubuntu才能访问互联网.<br><img src="https://cdn.nlark.com/yuque/0/2022/png/1143997/1649305053308-9c55a28a-1841-465b-8cdf-70848063d8e3.png#clientId=u6d078e06-09ae-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=625&id=QJX3Z&margin=%5Bobject%20Object%5D&name=image.png&originHeight=938&originWidth=1220&originalType=binary&ratio=1&rotation=0&showTitle=false&size=149970&status=done&style=none&taskId=u3e580369-beb2-48bb-8621-b3f41bdd9a5&title=&width=813.3333333333334" alt="image.png"></p><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gedit ~/.bashrc</span><br></pre></td></tr></table></figure><p>加入环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Permission-denied"><a href="#Permission-denied" class="headerlink" title="Permission denied"></a>Permission denied</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="built_in">chmod</span> 777 指定文件或者目录</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows应用搬家</title>
      <link href="/2022/10/01/Windows%E5%BA%94%E7%94%A8%E6%90%AC%E5%AE%B6/"/>
      <url>/2022/10/01/Windows%E5%BA%94%E7%94%A8%E6%90%AC%E5%AE%B6/</url>
      
        <content type="html"><![CDATA[<p>软件清单</p><ul><li>语雀</li><li>utools  | everything </li><li>git</li><li>node.js</li><li>java  IDEA   |  VScode</li><li>python   | pycharm</li><li>Edge浏览器</li><li>WPS</li><li>PDF-XChange Pro</li><li>HBuilder </li><li>hexo-editor</li><li>火绒安全</li><li>IDM</li><li>Microsoft Office Visio</li><li>边写边搜</li><li>Anaconda</li><li>CAJViewer   知网研学</li><li>feishu</li><li>todesk</li><li>centos</li><li>Clash for Windows</li><li>阿里云盘</li><li>百度网盘</li><li>CNKI E-Study</li><li>EndNote</li><li>飞书</li><li>FormatFactory</li><li>qq  |  tim | 微信  | 微信小程开发工具  | **小程序开发工具</li><li>Snipaste</li><li>VMware Player</li><li>Wise Program Uninstaller</li><li>Xshell6</li><li>百度翻译 | 网易云翻译</li><li>钉钉</li><li>剪映</li><li>超星阅读器</li><li>腾讯桌面管家 |  腾讯会议</li><li>向日葵</li><li>知云文献翻译</li><li>7z | 格式工厂</li><li>sspacesniffer</li><li>WindowsTabs</li><li>winrar</li><li>搜狗输入法</li><li>Snipaste   截图工具</li><li>WinSCP</li><li>Apifox   <a href="https://www.apifox.cn/">https://www.apifox.cn/</a></li><li>MobaXterm :</li><li>方方格子</li><li>Screen to Gif</li><li>洛雪音乐助手</li><li>Termius</li></ul><p>HBuilderProjects<br><img src="https://cdn.nlark.com/yuque/0/2022/png/1143997/1642433039793-749629a9-cf4e-4ebf-925d-3533308bc3a1.png#clientId=u888b0383-8a95-4&crop=0&crop=0&crop=1&crop=1&from=paste&height=287&id=u7b65ca38&margin=%5Bobject%20Object%5D&name=image.png&originHeight=574&originWidth=543&originalType=binary&ratio=1&rotation=0&showTitle=false&size=61566&status=done&style=none&taskId=u41d30b2a-a711-42a4-96b8-0c77b1fde3f&title=&width=271.5" alt="image.png"></p><p>7-Zip<br><a href="https://sparanoid.com/lab/7z/">https://sparanoid.com/lab/7z/</a> </p><p>Geek Uninstaller<br><a href="https://geekuninstaller.com/">https://geekuninstaller.com/</a></p><p>Microsoft Edge<br><a href="https://www.microsoft.com/en-us/edge">https://www.microsoft.com/en-us/edge</a></p><p>PotPlayer<br><a href="https://potplayer.daum.net/?lang=zh_CN">https://potplayer.daum.net/?lang=zh_CN</a></p><p>IDM<br><a href="http://www.internetdownloadmanager.com/">http://www.internetdownloadmanager.com/</a></p><p>Clover<br><a href="http://cn.ejie.me/">http://cn.ejie.me/</a></p><p>CCleaner<br><a href="https://www.ccleaner.com/">https://www.ccleaner.com/</a> </p><p>Wox<br><a href="https://github.com/Wox-launcher/Wox/releases">https://github.com/Wox-launcher/Wox/releases</a></p><p>Everything<br><a href="https://www.voidtools.com/zh-cn/">https://www.voidtools.com/zh-cn/</a></p><p>utools<br><a href="http://www.u.tools/">http://www.u.tools/</a></p><h2 id="Potplayer"><a href="#Potplayer" class="headerlink" title="Potplayer"></a>Potplayer</h2><p><a href="https://www.yuque.com/attachments/yuque/0/2022/rar/1143997/1651664828226-96bbfcb8-38ef-4289-a5a9-7fc8b9ed72d4.rar?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2022/rar/1143997/1651664828226-96bbfcb8-38ef-4289-a5a9-7fc8b9ed72d4.rar%22,%22name%22:%22Setup64.rar%22,%22size%22:30152210,%22type%22:%22%22,%22ext%22:%22rar%22,%22source%22:%22%22,%22status%22:%22done%22,%22mode%22:%22title%22,%22download%22:true,%22taskId%22:%22uff279b6b-19fc-42eb-826e-9d21f4947a2%22,%22taskType%22:%22transfer%22,%22id%22:%22u1c6b03e6%22,%22card%22:%22file%22%7D">Setup64.rar</a><br><a href="https://www.yuque.com/attachments/yuque/0/2022/zip/1143997/1651664828223-c9b490f9-5793-4643-8c15-2b0d02788399.zip?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2022/zip/1143997/1651664828223-c9b490f9-5793-4643-8c15-2b0d02788399.zip%22,%22name%22:%22Skins%E7%9A%AE%E8%82%A4.zip%22,%22size%22:5338989,%22type%22:%22application/x-zip-compressed%22,%22ext%22:%22zip%22,%22source%22:%22%22,%22status%22:%22done%22,%22mode%22:%22title%22,%22download%22:true,%22taskId%22:%22ue1be1d46-af16-46e0-925a-aab1af00250%22,%22taskType%22:%22transfer%22,%22id%22:%22u3a8edb0a%22,%22card%22:%22file%22%7D">Skins皮肤.zip</a><br><a href="https://www.yuque.com/attachments/yuque/0/2022/rar/1143997/1651664828231-f1496e9c-be9a-4e1f-84ff-1894820d764c.rar?_lake_card=%7B%22src%22:%22https://www.yuque.com/attachments/yuque/0/2022/rar/1143997/1651664828231-f1496e9c-be9a-4e1f-84ff-1894820d764c.rar%22,%22name%22:%22%E7%9B%B4%E6%92%AD%E6%BA%90.rar%22,%22size%22:374484,%22type%22:%22%22,%22ext%22:%22rar%22,%22source%22:%22%22,%22status%22:%22done%22,%22mode%22:%22title%22,%22download%22:true,%22taskId%22:%22u69170b4f-7487-4133-b2a8-02e8ec34768%22,%22taskType%22:%22transfer%22,%22id%22:%22u14142651%22,%22card%22:%22file%22%7D">直播源.rar</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>共产党宣言</title>
      <link href="/2022/10/01/%E3%80%8A%E5%85%B1%E4%BA%A7%E5%85%9A%E5%AE%A3%E8%A8%80%E3%80%8B/"/>
      <url>/2022/10/01/%E3%80%8A%E5%85%B1%E4%BA%A7%E5%85%9A%E5%AE%A3%E8%A8%80%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="共产党宣言"><a href="#共产党宣言" class="headerlink" title="共产党宣言"></a>共产党宣言</h1><p>一个幽灵，共产主义的幽灵，在欧洲游荡。为了对这个幽灵进行神圣的围剿，旧欧洲的一切势力，教皇和沙皇、梅特涅和基佐、法国的激进派和德国的警察，都联合起来了。</p><p>有哪一个反对党不被它的当政的敌人骂为共产党呢？又有哪一个反对党不拿共产主义这个罪名去回敬更进步的反对党人和自己的反动敌人呢？</p><p>从这一事实中可以得出两个结论：</p><p>共产主义已经被欧洲的一切势力公认为一种势力；</p><p>现在是共产党人向全世界公开说明自己的观点、自己的目的、自己的意图并且拿党自己的宣言来反驳关于共产主义幽灵的神话的时候了。</p><p>为了这个目的，各国共产党人集会于伦敦，拟定了如下的宣言，用英文、法文、德文、意大利文、弗拉芒文和丹麦文公布于世。</p><h2 id="一、资产者和无产者"><a href="#一、资产者和无产者" class="headerlink" title="一、资产者和无产者"></a>一、资产者和无产者</h2><p>至今一切社会的历史都是阶级斗争的历史。</p><p>自由民和奴隶、贵族和平民、领主和农奴、行会师傅和帮工，一句话，压迫者和被压迫者，始终处于相互对立的地位，进行不断的、有时隐蔽有时公开的斗争，而每一次斗争的结局都是整个社会受到革命改造或者斗争的各阶级同归于尽。</p><p>在过去的各个历史时代，我们几乎到处都可以看到社会完全划分为各个不同的等级，看到社会地位分成多种多样的层次。在古罗马，有贵族、骑士、平民、奴隶，在中世纪，有封建主、臣仆、行会师傅、帮工、农奴，而且几乎在每一个阶级内部又有一些特殊的阶层。</p><p>从封建社会的灭亡中产生出来的现代资产阶级社会并没有消灭阶级对立。它只是用新的阶级、新的压迫条件、新的斗争形式代替了旧的。</p><p>但是，我们的时代，资产阶级时代，却有一个特点：它使阶级对立简单化了。整个社会日益分裂为两大敌对的阵营，分裂为两大相互直接对立的阶级：资产阶级和无产阶级。</p><p>从中世纪的农奴中产生了初期城市的城关市民；从这个市民等级中发展出最初的资产阶级分子。</p><p>美洲的发现、绕过非洲的航行，给新兴的资产阶级开辟了新天地。东印度和中国的市场、美洲的殖民化、对殖民地的贸易、交换手段和一般商品的增加，使商业、航海业和工业空前高涨，因而使正在崩溃的封建社会内部的革命因素迅速发展。</p><p>以前那种封建的或行会的工业经营方式已经不能满足随着新市场的出现而增加的需求了。工场手工业代替了这种经营方式。行会师傅被工业的中间等级排挤掉了；各种行业组织之间的分工随着各个作坊内部的分工的出现而消失了。</p><p>但是，市场总是在扩大，需求总是在增加。甚至工场手工业也不再能满足需要了。于是，蒸汽和机器引起了工业生产的革命。现代大工业代替了工场手工业；工业中的百万富翁，一支一支产业大军的首领，现代资产者，代替了工业的中间等级。</p><p>大工业建立了由美洲的发现所准备好的世界市场。世界市场使商业、航海业和陆路交通得到了巨大的发展。这种发展又反过来促进了工业的扩展。同时，随着工业、商业、航海业和铁路的扩展，资产阶级也在同一程度上得到发展，增加自己的资本，把中世纪遗留下来的一切阶级排挤到后面去。</p><p>由此可见，现代资产阶级本身是一个长期发展过程的产物，是生产方式和交换方式的一系列变革的产物。</p><p>资产阶级的这种发展的每一个阶段，都伴随着相应的政治上的进展。它在封建主统治下是被压迫的等级，在公社里是武装的和自治的团体，在一些地方组成独立的城市共和国，在另一些地方组成君主国中的纳税的第三等级；后来，在工场手工业时期，它是等级君主国或专制君主国中同贵族抗衡的势力，而且是大君主国的主要基础；最后，从大工业和世界市场建立的时候起，它在现代的代议制国家里夺得了独占的政治统治。现代的国家政权不过是管理整个资产阶级的共同事务的委员会罢了。</p><p>资产阶级在历史上曾经起过非常革命的作用。</p><p><strong>资产阶级在它已经取得了统治的地方把一切封建的、宗法的和田园般的关系都破坏了。它无情地斩断了把人们束缚于天然尊长的形形色色的封建羁绊，它使人和人之间除了赤裸裸的利害关系，除了冷酷无情的“现金交易”，就再也没有任何别的联系了。它把宗教虔诚、骑士热忱、小市民伤感这些情感的神圣发作，淹没在利己主义打算的冰水之中。它把人的尊严变成了交换价值，用一种没有良心的贸易自由代替了无数特许的和自力挣得的自由。总而言之，它用公开的、无耻的、直接的、露骨的剥削代替了由宗教幻想和政治幻想掩盖着的剥削。</strong></p><p>资产阶级抹去了一切向来受人尊崇和令人敬畏的职业的神圣光环。它把医生、律师、教士、诗人和学者变成了它出钱招雇的雇佣劳动者。</p><p>资产阶级撕下了罩在家庭关系上的温情脉脉的面纱，把这种关系变成了纯粹的金钱关系。</p><p>资产阶级揭示了，在中世纪深受反动派称许的那种人力的野蛮使用，是以极端怠惰作为相应补充的。它第一个证明了，人的活动能够取得什么样的成就。它创造了完全不同于埃及金字塔、罗马水道和哥特式教堂的奇迹；它完成了完全不同于民族大迁徙和十字军征讨的远征。</p><p>资产阶级除非对生产工具，从而对生产关系，从而对全部社会关系不断地进行革命，否则就不能生存下去。反之，原封不动地保持旧的生产方式，却是过去的一切工业阶级生存的首要条件。生产的不断变革，一切社会状况不停的动荡，永远的不安定和变动，这就是资产阶级时代不同于过去一切时代的地方。一切固定的僵化的关系以及与之相适应的素被尊崇的观念和见解都被消除了，一切新形成的关系等不到固定下来就陈旧了。一切等级的和固定的东西都烟消云散了，一切神圣的东西都被亵渎了。人们终于不得不用冷静的眼光来看他们的生活地位、他们的相互关系。</p><p>不断扩大产品销路的需要，驱使资产阶级奔走于全球各地。它必须到处落户，到处开发，到处建立联系。</p><p>资产阶级，由于开拓了世界市场，使一切国家的生产和消费都成为世界性的了。使反动派大为惋惜的是，资产阶级挖掉了工业脚下的民族基础。古老的民族工业被消灭了，并且每天都还在被消灭。它们被新的工业排挤掉了，新的工业的建立已经成为一切文明民族的生命攸关的问题；这些工业所加工的，已经不是本地的原料，而是来自极其遥远的地区的原料；它们的产品不仅供本国消费，而且同时供世界各地消费。旧的、靠本国产品来满足的需要，被新的、要靠极其遥远的国家和地带的产品来满足的需要所代替了。过去那种地方的和民族的自给自足和闭关自守状态，被各民族的各方面的互相往来和各方面的互相依赖所代替了。物质的生产是如此，精神的生产也是如此。各民族的精神产品成了公共的财产。民族的片面性和局限性日益成为不可能，于是由许多种民族的和地方的文学形成了一种世界的文学。</p><p><strong>资产阶级，由于一切生产工具的迅速改进，由于交通的极其便利，把一切民族甚至最野蛮的民族都卷到文明中来了。它的商品的低廉价格，是它用来摧毁一切万里长城、征服野蛮人最顽强的仇外心理的重炮。它迫使一切民族——如果它们不想灭亡的话——采用资产阶级的生产方式；它迫使它们在自己那里推行所谓的文明，即变成资产者。一句话，它按照自己的面貌为自己创造出一个世界。</strong></p><p>资产阶级使农村屈服于城市的统治。它创立了巨大的城市，使城市人口比农村人口大大增加起来，因而使很大一部分居民脱离了农村生活的愚昧状态。正像它使农村从属于城市一样，它使未开化和半开化的国家从属于文明的国家，使农民的民族从属于资产阶级的民族，使东方从属于西方。</p><p>资产阶级日甚一日地消灭生产资料、财产和人口的分散状态。它使人口密集起来，使生产资料集中起来，使财产聚集在少数人的手里。由此必然产生的结果就是政治的集中。各自独立的、几乎只有同盟关系的、各有不同利益、不同法律、不同政府、不同关税的各个地区，现在已经结合为一个拥有统一的政府、统一的法律、统一的民族阶级利益和统一的关税的统一的民族。</p><p>资产阶级在它的不到一百年的阶级统治中所创造的生产力，比过去一切世代创造的全部生产力还要多，还要大。自然力的征服，机器的采用，化学在工业和农业中的应用，轮船的行驶，铁路的通行，电报的使用，整个整个大陆的开垦，河川的通航，仿佛用法术从地下呼唤出来的大量人口，——过去哪一个世纪料想到在社会劳动里蕴藏有这样的生产力呢？</p><p>由此可见，资产阶级赖以形成的生产资料和交换手段，是在封建社会里造成的。在这些生产资料和交换手段发展的一定阶段上，封建社会的生产和交换在其中进行的关系，封建的农业和工场手工业组织，一句话，封建的所有制关系，就不再适应已经发展的生产力了。这种关系已经在阻碍生产而不是促进生产了。它变成了束缚生产的桎梏。它必须被炸毁，它已经被炸毁了。</p><p>起而代之的是自由竞争以及与自由竞争相适应的社会制度和政治制度、资产阶级的经济统治和政治统治。</p><p>现在，我们眼前又进行着类似的运动。资产阶级的生产关系和交换关系，资产阶级的所有制关系，这个曾经仿佛用法术创造了如此庞大的生产资料和交换手段的现代资产阶级社会，现在像一个魔法师一样不能再支配自己用法术呼唤出来的魔鬼了。几十年来的工业和商业的历史，只不过是现代生产力反抗现代生产关系、反抗作为资产阶级及其统治的存在条件的所有制关系的历史。只要指出在周期性的重复中越来越危及整个资产阶级社会生存的商业危机就够了。在商业危机期间，总是不仅有很大一部分制成的产品被毁灭掉，而且有很大一部分已经造成的生产力被毁灭掉。<strong>在危机期间，发生一种在过去一切时代看来都好像是荒唐现象的社会瘟疫，即生产过剩的瘟疫。社会突然发现自己回到了一时的野蛮状态；仿佛是一次饥荒、一场普遍的毁灭性战争，使社会失去了全部生活资料；仿佛是工业和商业全被毁灭了，——这是什么缘故呢？因为社会上文明过度，生活资料太多，工业和商业太发达。社会所拥有的生产力已经不能再促进资产阶级文明和资产阶级所有制关系的发展；相反，生产力已经强大到这种关系所不能适应的地步，它已经受到这种关系的阻碍；而它一着手克服这种障碍，就使整个资产阶级社会陷入混乱，就使资产阶级所有制的存在受到威胁。</strong><br>资产阶级的关系已经太狭窄了，再容纳不了它本身所造成的财富了。——<strong>资产阶级用什么办法来克服这种危机呢？一方面不得不消灭大量生产力，另一方面夺取新的市场，更加彻底地利用旧的市场。</strong><br>这究竟是怎样的一种办法呢？这不过是资产阶级准备更全面更猛烈的危机的办法，不过是使防止危机的手段越来越少的办法。</p><p>资产阶级用来推翻封建制度的武器，现在却对准资产阶级自己了。</p><p>但是，资产阶级不仅锻造了置自身于死地的武器；它还产生了将要运用这种武器的人——现代的工人，即无产者。</p><p><strong>随着资产阶级即资本的发展，无产阶级即现代工人阶级也在同一程度上得到发展；现代的工人只有当他们找到工作的时候才能生存，而且只有当他们的劳动增殖资本的时候才能找到工作。这些不得不把自己零星出卖的工人，像其他任何货物一样，也是一种商品，所以他们同样地受到竞争的一切变化、市场的一切波动的影响。</strong></p><p>由于推广机器和分工，无产者的劳动已经失去了任何独立的性质，因而对工人也失去了任何吸引力。工人变成了机器的单纯的附属品，要求他做的只是极其简单、极其单调和极容易学会的操作。因此，<strong>花在工人身上的费用，几乎只限于维持工人生活和延续工人后代所必需的生活资料。</strong><br>但是，商品的价格，从而劳动的价格，是同它的生产费用相等的。<br><strong>因此，劳动越使人感到厌恶，工资也就越少。</strong><br>不仅如此，机器越推广，分工越细致，劳动量出就越增加，这或者是由于工作时间的延长，或者是由于在一定时间内所要求的劳动的增加，机器运转的加速，等等。</p><p>现代工业已经把家长式的师傅的小作坊变成了工业资本家的大工厂。挤在工厂里的工人群众就像士兵一样被组织起来。他们是产业军的普通士兵，受着各级军士和军官的层层监视。<br><strong>他们不仅仅是资产阶级的、资产阶级国家的奴隶，他们每日每时都受机器、受监工、首先是受各个经营工厂的资产者本人的奴役。</strong><br>这种专制制度越是公开地把营利宣布为自己的最终目的，它就越是可鄙、可恨和可恶。</p><p>手的操作所要求的技巧和气力越少，换句话说，现代工业越发达，男工也就越受到女工和童工的排挤。<br><strong>对工人阶级来说，性别和年龄的差别再没有什么社会意义了。</strong><br>他们都只是劳动工具，不过因为年龄和性别的不同而需要不同的费用罢了。</p><p>当厂主对工人的剥削告一段落，工人领到了用现钱支付的工资的时候，马上就有资产阶级中的另一部分人——房东、小店主、当铺老板等等向他们扑来。</p><p>以前的中间等级的下层，即小工业家、小商人和小食利者，手工业者和农民——所有这些阶级都降落到无产阶级的队伍里来了，有的是因为他们的小资本不足以经营大工业，经不起较大的资本家的竞争；有的是因为他们的手艺已经被新的生产方法弄得不值钱了。无产阶级就是这样从居民的所有阶级中得到补充的。</p><p>无产阶级经历了各个不同的发展阶段。它反对资产阶级的斗争是和它的存在同时开始的。</p><p>最初是单个的工人，然后是某一工厂的工人，然后是某一地方的某一劳动部门的工人，同直接剥削他们的单个资产者作斗争。他们不仅仅攻击资产阶级的生产关系，而且攻击生产工具本身；他们毁坏那些来竞争的外国商品，捣毁机器，烧毁工厂，力图恢复已经失去的中世纪工人的地位。</p><p>在这个阶段上，工人是分散在全国各地并为竞争所分裂的群众。工人的大规模集结，还不是他们自己联合的结果，而是资产阶级联合的结果，当时资产阶级为了达到自己的政治目的必须而且暂时还能够把整个无产阶级发动起来。因此，在这个阶段上，无产者不是同自己的敌人作斗争，而是同自己的敌人的敌人作斗争，即同专制君主制的残余、地主、非工业资产者和小资产者作斗争。因此，整个历史运动都集中在资产阶级手里；在这种条件下取得的每一个胜利都是资产阶级的胜利。</p><p>但是，随着工业的发展，无产阶级不仅人数增加了，而且它结合成更大的集体，它的力量日益增长，它越来越感觉到自己的力量。机器使劳动的差别越来越小，使工资几乎到处都降到同样低的水平，因而无产阶级内部的利益、生活状况也越来越趋于一致。资产者彼此间日益加剧的竞争以及由此引起的商业危机，使工人的工资越来越不稳定；机器的日益迅速的和继续不断的改良，使工人的整个生活地位越来越没有保障；单个工人和单个资产者之间的冲突越来越具有两个阶级的冲突的性质。工人开始成立反对资产者的同盟；他们联合起来保卫自己的工资。他们甚至建立了经常性的团体，以便为可能发生的反抗准备食品。有些地方，斗争爆发为起义。</p><p>工人有时也得到胜利，但这种胜利只是暂时的。他们斗争的真正成果并不是直接取得的成功，而是工人的越来越扩大的联合。这种联合由于大工业所造成的日益发达的交通工具而得到发展，这种交通工具把各地的工人彼此联系起来。只要有了这种联系，就能把许多性质相同的地方性的斗争汇合成全国性的斗争，汇合成阶级斗争。而一切阶级斗争都是政治斗争。中世纪的市民靠乡间小道需要几百年才能达到的联合，现代的无产者利用铁路只要几年就可以达到了。</p><p>无产者组织成为阶级，从而组织成为政党这件事，不断地由于工人的自相竞争而受到破坏。但是，这种组织总是重新产生，并且一次比一次更强大，更坚固，更有力。它利用资产阶级内部的分裂，迫使他们用法律形式承认工人的个别利益。英国的十小时工作日法案就是一个例子。</p><p>旧社会内部的所有冲突在许多方面都促进了无产阶级的发展。资产阶级处于不断的斗争中：最初反对贵族；后来反对同工业进步有利害冲突的那部分资产阶级；经常反对一切外国的资产阶级。<strong>在这一切斗争中，资产阶级都不得不向无产阶级呼吁，要求无产阶级援助，这样就把无产阶级卷进了政治运动。于是，资产阶级自己就把自己的教育因素即反对自身的武器给予了无产阶级。</strong></p><p>其次，我们已经看到，工业的进步把统治阶级的整批成员抛到无产阶级队伍里去，或者至少也使他们的生活条件受到威胁。他们也给无产阶级带来了大量的教育因素。</p><p>最后，在阶级斗争接近决战的时期，统治阶级内部的、整个旧社会内部的瓦解过程，就达到非常强烈、非常尖锐的程度，甚至使得统治阶级中的一小部分人脱离统治阶级而归附于革命的阶级，即掌握着未来的阶级。所以，正像过去贵族中有一部分人转到资产阶级方面一样，现在资产阶级中也有一部分人，特别是已经提高到从理论上认识整个历史运动这一水平的一部分资产阶级思想家，转到无产阶级方面来了。</p><p>在当前同资产阶级对立的一切阶级中，只有无产阶级是真正革命的阶级。其余的阶级都随着大工业的发展而日趋没落和灭亡，无产阶级却是大工业本身的产物。</p><p>中间等级，即小工业家、小商人、手工业者、农民，他们同资产阶级作斗争，都是为了维护他们这种中间等级的生存，以免于灭亡。所以，他们不是革命的，而是保守的。不仅如此，他们甚至是反动的，因为他们力图使历史的车轮倒转。如果说他们是革命的，那是鉴于他们行将转入无产阶级的队伍，这样，他们就不是维护他们目前的利益，而是维护他们将来的利益，他们就离开自己原来的立场，而站到无产阶级的立场上来。</p><p><strong>流氓无产阶级是旧社会最下层中消极的腐化的部分，他们在一些地方也被无产阶级革命卷到运动里来，但是，由于他们的整个生活状况，他们更甘心于被人收买，去干反动的勾当。</strong></p><p>在无产阶级的生活条件中，旧社会的生活条件已经被消灭了。无产者是没有财产的；他们和妻子儿女的关系同资产阶级的家庭关系再没有任何共同之处了；现代的工业劳动，现代的资本压迫，无论在英国或法国，无论在美国或德国，都是一样的，都使无产者失去了任何民族性。法律、道德、宗教在他们看来全都是资产阶级偏见，隐藏在这些偏见后面的全都是资产阶级利益。</p><p>过去一切阶级在争得统治之后，总是使整个社会服从于它们发财致富的条件，企图以此来巩固它们已获得的生活地位。无产者只有废除自己的现存的占有方式，从而废除全部现存的占有方式，才能取得社会生产力。无产者没有什么自己的东西必须加以保护，他们必须摧毁至今保护和保障私有财产的一切。</p><p>过去的一切运动都是少数人的或者为少数人谋利益的运动。无产阶级的运动是绝大多数人的、为绝大多数人谋利益的独立的运动。无产阶级，现今社会的最下层，如果不炸毁构成官方社会的整个上层，就不能抬起头来，挺起胸来。</p><p>如果不就内容而就形式来说，无产阶级反对资产阶级的斗争首先是一国范围内的斗争。每一个国家的无产阶级当然首先应该打倒本国的资产阶级。</p><p>在叙述无产阶级发展的最一般的阶段的时候，我们循序探讨了现存社会内部或多或少隐蔽着的国内战争，直到这个战争爆发为公开的革命，无产阶级用暴力推翻资产阶级而建立自己的统治。</p><p>我们已经看到，至今的一切社会都是建立在压迫阶级和被压迫阶级的对立之上的。但是，为了有可能压迫一个阶级，就必须保证这个阶级至少有能够勉强维持它的奴隶般的生存的条件。农奴曾经在农奴制度下挣扎到公社成员的地位，小资产者曾经在封建专制制度的束缚下挣扎到资产者的地位。现代的工人却相反，他们并不是随着工业的进步而上升，而是越来越降到本阶级的生存条件以下。工人变成赤贫者，贫困比人口和财富增长得还要快。由此可以明显地看出，资产阶级再不能做社会的统治阶级了，再不能把自己阶级的生存条件当作支配一切的规律强加于社会了。资产阶级不能统治下去了，因为它甚至不能保证自己的奴隶维持奴隶的生活，因为它不得不让自己的奴隶落到不能养活它反而要它来养活的地步。社会再不能在它统治下生存下去了，就是说，它的生存不再同社会相容了。</p><p>资产阶级生存和统治的根本条件，是财富在私人手里的积累，是资本的形成和增殖；资本的条件是雇佣劳动。雇佣劳动完全是建立在工人的自相竞争之上的。资产阶级无意中造成而又无力抵抗的工业进步，使工人通过结社而达到的革命联合代替了他们由于竞争而造成的分散状态。于是，随着大工业的发展，资产阶级赖以生产和占有产品的基础本身也就从它的脚下被挖掉了。它首先生产的是它自身的掘墓人。资产阶级的灭亡和无产阶级的胜利是同样不可避免的。</p><p>二、无产者和共产党人</p><p>共产党人同全体无产者的关系是怎样的呢？</p><p>共产党人不是同其他工人政党相对立的特殊政党。</p><p>他们没有任何同整个无产阶级的利益不同的利益。</p><p>他们不提出任何特殊的原则，用以塑造无产阶级的运动。</p><p>共产党人同其他无产阶级政党不同的地方只是：一方面，在无产者不同的民族的斗争中，共产党人强调和坚持整个无产阶级共同的不分民族的利益；另一方面，在无产阶级和资产阶级的斗争所经历的各个发展阶段上，共产党人始终代表整个运动的利益。</p><p>因此，在实践方面，共产党人是各国工人政党中最坚决的、始终起推动作用的部分；在理论方面，他们胜过其余无产阶级群众的地方在于他们了解无产阶级运动的条件、进程和一般结果。</p><p>共产党人的最近目的是和其他一切无产阶级政党的最近目的一样的：使无产阶级形成为阶级，推翻资产阶级的统治，由无产阶级夺取政权。</p><p>共产党人的理论原理，决不是以这个或那个世界改革家所发明或发现的思想、原则为根据的。</p><p>这些原理不过是现存的阶级斗争、我们眼前的历史运动的真实关系的一般表述。废除先前存在的所有制关系，并不是共产主义所独具的特征。</p><p>一切所有制关系都经历了经常的历史更替、经常的历史变更。</p><p>例如，法国革命废除了封建的所有制，代之以资产阶级的所有制。</p><p>共产主义的特征并不是要废除一般的所有制，而是要废除资产阶级的所有制。</p><p>但是，现代的资产阶级私有制是建立在阶级对立上面、建立在一些人对另一些人的剥削上面的产品生产和占有的最后而又完备的表现。</p><p>从这个意义上说，共产党人可以把自己的理论概括为一句话：消灭私有制。</p><p>有人责备我们共产党人，说我们消灭个人挣得的、自己劳动得来的财产，要消灭构成个人的一切自由、活动和独立的基础的财产。</p><p>好一个劳动得来的、自己挣得的、自己赚来的财产！你们说的是资产阶级财产出现以前的那种小资产阶级、小农的财产吗？那种财产用不着我们去消灭，工业的发展已经把它消灭了，而且每天都在消灭它。</p><p>或者，你们说的是现代的资产阶级的私有财产吧？</p><p>但是，难道雇佣劳动，无产者的劳动，会给无产者创造出财产来吗？没有的事。这种劳动所创造的资本，即剥削雇佣劳动的财产，只有在不断产生出新的雇佣劳动来重新加以剥削的条件下才能增殖的财产。现今的这种财产是在资本和雇佣劳动的对立中运动的。让我们来看看这种对立的两个方面吧。</p><p>做一个资本家，这就是说，他在生产中不仅占有一种纯粹个人的地位，而且占有一种社会地位。资本是集体的产物，它只有通过社会许多成员的共同活动，而且归根到底只有通过社会全体成员的共同活动，才能运动起来。</p><p>因此，资本不是一种个人力量，而是一种社会力量。</p><p>因此，把资本变为公共的、属于社会全体成员的财产，这并不是把个人财产变为社会财产。这里所改变的只是财产的社会性质。它将失掉它的阶级性质。</p><p>现在，我们来看看雇佣劳动。</p><p>雇佣劳动的平均价格是最低限度的工资，即工人为维持其工人的生活所必需的生活资料的数额。因此，雇佣工人靠自己的劳动所占有的东西，只够勉强维持他的生命的再生产。我们决不打算消灭这种供直接生命再生产用的劳动产品的个人占有，这种占有并不会留下任何剩余的东西使人们有可能支配别人的劳动。我们要消灭的只是这种占有的可怜的性质，在这种占有下，工人仅仅为增殖资本而活着，只有在统治阶级的利益需要他活着的时候才能活着。</p><p>在资产阶级社会里，活的劳动只是增殖已经积累起来的劳动的一种手段。在共产主义社会里，已经积累起来的劳动只是扩大、丰富和提高工人的生活的一种手段。</p><p>因此，在资产阶级社会里是过去支配现在，在共产主义社会里是现在支配过去。在资产阶级社会里，资本具有独立性和个性，而活动着的个人却没有独立性和个性。</p><p>而资产阶级却把消灭这种关系说成是消灭个性和自由！说对了。的确，正是要消灭资产者的个性、独立性和自由。</p><p>在现今的资产阶级生产关系的范围内，所谓自由就是自由贸易，自由买卖。</p><p>但是，买卖一消失，自由买卖也就会消失。关于自由买卖的言论，也像我们的资产阶级的其他一切关于自由的大话一样，仅仅对于不自由的买卖来说，对于中世纪被奴役的市民来说，才是有意义的，而对于共产主义要消灭买卖、消灭资产阶级生产关系和资产阶级本身这一点来说，却是毫无意义的。</p><p>我们要消灭私有制，你们就惊慌起来。但是，在你们的现存社会里，私有财产对十分之九的成员来说已经被消灭了；这种私有制之所以存在，正是因为私有财产对十分之九的成员来说已经不存在。可见，你们责备我们，是说我们要消灭那种以社会上的绝大多数人没有财产为必要条件的所有制。</p><p>总而言之，你们责备我们，是说我们要消灭你们的那种所有制。的确，我们是要这样做的。</p><p>从劳动不再能变为资本、货币、地租，一句话，不再能变为可以垄断的社会力量的时候起，就是说，从个人财产不再能变为资产阶级财产的时候起，你们说，个性被消灭了。</p><p>由此可见，你们是承认，你们所理解的个性，不外是资产者、资产阶级私有者。这样的个性确实应当被消灭。</p><p>共产主义并不剥夺任何人占有社会产品的权力，它只剥夺利用这种占有去奴役他人劳动的权力。</p><p>有人反驳说，私有制一消灭，一切活动就会停止，懒惰之风就会兴起。</p><p>这样说来，资产阶级社会早就应该因懒惰而灭亡了，因为在这个社会里劳者不获，获者不劳。所有这些顾虑，都可以归结为这样一个同义反复：一旦没有资本，也就不再有雇佣劳动了。</p><p>所有这些对共产主义的物质产品的占有方式和生产方式的责备，也被扩及到精神产品的占有和生产方面。正如阶级的所有制的终止在资产者看来是生产本身的终止一样，阶级的教育的终止在他们看来就等于一切教育的终止。</p><p>资产者唯恐失去的那种教育，绝大多数人来说是把人训练成机器。</p><p>但是，你们既然用你们资产阶级关于自由、教育、法等等的观念来衡量废除资产阶级所有制的主张，那就请你们不要同我们争论了。你们的观念本身是资产阶级的生产关系和所有制关系的产物，正像你们的法不过是被奉为法律的你们这个阶级的意志一样，而这种意志的内容是由你们这个阶级的物质生活条件决定的。</p><p>你们的利己观念使你们把自己的生产关系和所有制关系从历史的、在生产过程中是暂时的关系变成永恒的自然规律和理性规律，这种利己观念是你们和一切灭亡了的统治阶级所共有的。谈到古代所有制的时候你们所能理解的，谈到封建所有制的时候你们所能理解的，一谈到资产阶级所有制你们就再也不能理解了。</p><p>消灭家庭！连极端的激进派也对共产党人的这种可耻的意图表示愤慨。</p><p><strong>现代的、资产阶级的家庭是建立在什么基础上的呢？是建立在资本上面，建立在私人发财上面的。这种家庭只是在资产阶级那里才以充分发展的形式存在着，而无产者的被迫独居和公开的卖淫则是它的补充。</strong></p><p>资产者的家庭自然会随着它的这种补充的消失而消失，两者都要随着资本的消失而消失。</p><p>你们是责备我们要消灭父母对子女的剥削吗？我们承认这种罪状。</p><p>但是，你们说，我们用社会教育代替家庭教育，就是要消灭人们最亲密的关系。</p><p><strong>而你们的教育不也是由社会决定的吗？不也是由你们进行教育时所处的那种社会关系决定的吗？不也是由社会通过学校等等进行的直接的或间接的干涉决定的吗？共产党人并没有发明社会对教育的作用；他们仅仅是要改变这种作用的性质，要使教育摆脱统治阶级的影响。</strong></p><p>无产者的一切家庭联系越是由于大工业的发展而被破坏，他们的子女越是由于这种发展而被变成单纯的商品和劳动工具，资产阶级关于家庭和教育、关于父母和子女的亲密关系的空话就越是令人作呕。</p><p>但是，你们共产党人是要实行公妻制的啊，——整个资产阶级异口同声地向我们这样叫喊。</p><p>资产者是把自己的妻子看作单纯的生产工具的。他们听说生产工具将要公共使用，自然就不能不想到妇女也会遭到同样的命运。</p><p>他们想也没有想到，问题正在于使妇女不再处于单纯生产工具的地位。</p><p>其实，我们的资产者装得道貌岸然，对所谓的共产党人的正式公妻制表示惊讶，那是再可笑不过了。公妻制无需共产党人来实行，它差不多是一向就有的。</p><p>我们的资产者不以他们的无产者的妻子和女儿受他们支配为满足，正式的卖淫更不必说了，他们还以互相诱奸妻子为最大的享乐。</p><p><strong>资产阶级的婚姻实际上是公妻制。人们至多只能责备共产党人，说他们想用正式的、公开的公妻制来代替伪善地掩蔽着的公妻制。其实，不言而喻，随着现在的生产关系的消灭，从这种关系中产生的公妻制，即正式的和非正式的卖淫，也就消失了。</strong></p><p>有人还责备共产党人，说他们要取消祖国，取消民族。</p><p>工人没有祖国。决不能剥夺他们所没有的东西。因为无产阶级首先必须取得政治统治，上升为民族的阶级，把自身组织成为民族，所以它本身还是民族的，虽然完全不是资产阶级所理解的那种意思。</p><p>随着资产阶级的发展，随着贸易自由的实现和世界市场的建立，随着工业生产以及与之相适应的生活条件的趋于一致，各国人民之间的民族分隔和对立日益消失。</p><p>无产阶级的统治将使它们更快地消失。联合的行动，至少是各文明国家的联合的行动，是无产阶级获得解放的首要条件之一。</p><p>人对人的剥削一消灭，民族对民族的剥削就会随之消灭。</p><p>民族内部的阶级对立一消失，民族之间的敌对关系就会随之消失。</p><p>从宗教的、哲学的和一切意识形态的观点对共产主义提出的种种责难，都不值得详细讨论了。</p><p>人们的观念、观点和概念，一句话，人们的意识，随着人们的生活条件、人们的社会关系、人们的社会存在的改变而改变，这难道需要经过深思才能了解吗？</p><p>思想的历史除了证明精神生产随着物质生产的改造而改造，还证明了什么呢？任何一个时代的统治思想始终都不过是统治阶级的思想。</p><p>当人们谈到使整个社会革命化的思想时，他们只是表明了一个事实：在旧社会内部已经形成了新社会的因素，旧思想的瓦解是同旧生活条件的瓦解步调一致的。</p><p><strong>当古代世界走向灭亡的时候，古代的各种宗教就被基督教战胜了。当基督教思想在18世纪被启蒙思想击败的时候，封建社会正在同当时革命的资产阶级进行殊死的斗争。信仰自由和宗教自由的思想，不过表明竞争在信仰领域里占统治地位罢了。</strong></p><p>“但是”，有人会说，“宗教的、道德的、哲学的、政治的、法的观念等等在历史发展的进程中固然是不断改变的，而宗教、道德、哲学、政治和法在这种变化中却始终保存着。</p><p>此外，还存在着一切社会状态所共有的永恒真理，如自由、正义等等。但是共产主义要废除永恒真理，它要废除宗教、道德，而不是加以革新，所以共产主义是同至今的全部历史发展相矛盾的。”</p><p>这种责难归结为什么呢？至今的一切社会的历史都是在阶级对立中运动的，而这种对立在不同的时代具有不同的形式。</p><p>但是，不管阶级对立具有什么样的形式，社会上一部分人对另一部分人的剥削却是过去各个世纪所共有的事实。因此，毫不奇怪，各个世纪的社会意识，尽管形形色色、千差万别，总是在某些共同的形式中运动的，这些形式，这些意识形式，只有当阶级对立完全消失的时候才会完全消失。</p><p>共产主义革命就是同传统的所有制关系实行最彻底的决裂；毫不奇怪，它在自己的发展进程中要同传统的观念实行最彻底的决裂。</p><p>不过，我们还是把资产阶级对共产主义的种种责难撇开吧。</p><p>前面我们已经看到，工人革命的第一步就是使无产阶级上升为统治阶级，争得民主。</p><p>无产阶级将利用自己的政治统治，一步一步地夺取资产阶级的全部资本，把一切生产工具集中在国家即组织成为统治阶级的无产阶级手里，并且尽可能快地增加生产力的总量。</p><p>要做到这一点，当然首先必须对所有权和资产阶级生产关系实行强制性的干涉，也就是采取这样一些措施，这些措施在经济上似乎是不够充分的和没有力量的，但是在运动进程中它们会越出本身，而且作为变革全部生产方式的手段是必不可少的。</p><p>这些措施在不同的国家里当然会是不同的。</p><p>**但是，最先进的国家几乎都可以采取下面的措施：</p><p><strong>1、剥夺地产，把地租用于国家支出。</strong></p><p><strong>2、征收高额累进税。</strong></p><p><strong>3、废除继承权。</strong></p><p><strong>4、没收一切流亡分子和叛乱分子的财产。</strong></p><p><strong>5、通过拥有国家资本和独享垄断权的国家银行，把信贷集中在国家手里。</strong></p><p><strong>6、把全部运输业集中在国家的手里。</strong></p><p><strong>7、按照总的计划增加国家工厂和生产工具，开垦荒地和改良土壤。</strong></p><p><strong>8、实行普遍劳动义务制，成立产业军，特别是在农业方面。</strong></p><p><strong>9、把农业和工业结合起来，促使城乡对立逐步消灭。</strong></p><p><strong>10、对所有儿童实行公共的和免费的教育。取消现在这种形式的儿童的工厂劳动。把教育同物质生产结合起来，等等。</strong></p><p>当阶级差别在发展进程中已经消失而全部生产集中在联合起来的个人的手里的时候，公共权力就失去政治性质。原来意义上的政治权力，是一个阶级用以压迫另一个阶级的有组织的暴力。如果说无产阶级在反对资产阶级的斗争中一定要联合为阶级，如果说它通过革命使自己成为统治阶级，并以统治阶级的资格用暴力消灭旧的生产关系，那么它在消灭这种生产关系的同时，也就消灭了阶级对立的存在条件，消灭阶级本身的存在条件，从而消灭了它自己这个阶级的统治。</p><p>代替那存在着阶级和阶级对立的资产阶级旧社会的，将是这样一个联合体，在那里，每个人的自由发展是一切人的自由发展的条件。</p><h2 id="三、社会主义的和共产主义的文献"><a href="#三、社会主义的和共产主义的文献" class="headerlink" title="三、社会主义的和共产主义的文献"></a>三、社会主义的和共产主义的文献</h2><h3 id="1．反动的社会主义"><a href="#1．反动的社会主义" class="headerlink" title="1．反动的社会主义"></a>1．反动的社会主义</h3><h4 id="（甲）封建的社会主义"><a href="#（甲）封建的社会主义" class="headerlink" title="（甲）封建的社会主义"></a>（甲）封建的社会主义</h4><p>法国和英国的贵族，按照他们的历史地位所负的使命，就是写一些抨击现代资产阶级社会的作品。在法国的1830年七月革命和英国的改革运动中，他们再一次被可恨的暴发户打败了。从此就再谈不上严重的政治斗争了。他们还能进行的只是文字斗争。但是，即使在文字方面也不可能重弹复辟时期的老调了。为了激起同情，贵族们不得不装模作样，似乎他们已经不关心自身的利益，只是为了被剥削的工人阶级的利益才去写对资产阶级的控诉书。他们用来泄愤的手段是：唱唱诅咒他们的新统治者的歌，并向他叽叽咕咕地说一些或多或少凶险的预言。</p><p>这样就产生了封建的社会主义，半是挽歌，半是谤文，半是过去的回音，半是未来的恫吓；它有时也能用辛辣、俏皮而尖刻的评论剌中资产阶级的心，但是它由于完全不能理解现代历史的进程而总是令人感到可笑。</p><p>为了拉拢人民，贵族们把无产阶级的乞食袋当作旗帜来挥舞。但是，每当人民跟着他们走的时候，都发现他们的臀部带有旧的封建纹章，于是就哈哈大笑，一哄而散。</p><p>一部分法国正统派和“青年英国”，都演过这出戏。</p><p>封建主说，他们的剥削方式和资产阶级的剥削不同，那他们只是忘记了，他们是在完全不同的、目前已经过时的情况和条件下进行剥削的。他们说，在他们的统治下并没有出现过现代的无产阶级，那他们只是忘记了，现代的资产阶级正是他们的社会制度的必然产物。</p><p>不过，他们毫不掩饰自己的批评的反动性质，他们控告资产阶级的主要罪状正是在于：在资产阶级的统治下有一个将把整个旧社会制度炸毁的阶级发展起来。</p><p>他们责备资产阶级，与其说是因为它产生了无产阶级，不如说是因为它产生了革命的无产阶级。</p><p>因此，在政治实践中，他们参与对工人阶级采取的一切暴力措施，在日常生活中，他们违背自己的那一套冠冕堂皇的言词，屈尊拾取金苹果，不顾信义、仁爱和名誉去做羊毛、甜菜和烧洒的买卖。</p><p>正如僧侣总是同封建主携手同行一样，僧侣的社会主义也总是同封建的社会主义携手同行的。</p><p>要给基督教禁欲主义涂上一层社会主义的色彩，是再容易不过了。基督教不是也激烈反对私有财产，反对婚姻，反对国家吗？它不是提倡用行善和求乞、独身和禁欲、修道和礼拜来代替这一切吗？基督教的社会主义，只不过是僧侣用来使贵族的怨愤神圣的圣水罢了。</p><h4 id="（乙）小资产阶级的社会主义"><a href="#（乙）小资产阶级的社会主义" class="headerlink" title="（乙）小资产阶级的社会主义"></a>（乙）小资产阶级的社会主义</h4><p>封建贵族并不是被资产阶级所推翻的、其生活条件在现代资产阶级社会里日益恶化和消失的唯一阶级。中世纪的城关市民和小农等级是现代资产阶级的前身。在工商业不很发达的国家里，这个阶级还在新兴的资产阶级身旁勉强生存着。</p><p>在现代文明已经发展的国家里，形成了一个新的小资产阶级，它摇摆于无产阶级和资产阶级之间，并且作为资产阶级社会的补充部分不断地重新组成。但是，这一阶级的成员经常被竞争抛到无产阶级队伍里去，而且，随着大工业的发展，他们甚至觉察到，他们很快就会完全失去他们作为现代社会中一个独立部分的地位，在商业、工业和农业中很快就会被监工和雇员所代替。</p><p>在农民阶级远远超过人口半数的国家，例如在法国，那些站在无产阶级方面反对资产阶级的著作家，自然是用小资产阶级和小农的尺度去批判资产阶级制度的，是从小资产阶级的立场出发替工人说话的。这样就形成了小资产阶级的社会主义。西斯蒙第不仅对法国而且对英国来说都是这类著作家的首领。</p><p>这种社会主义非常透彻地分析了现代生产关系中的矛盾。它揭穿了经济学家的虚伪的粉饰。它确凿地证明了机器和分工的破坏作用、资本和地产的积聚、生产过剩、危机、小资产者和小农的必然没落、无产阶级的贫困、生产的无政府状态、财富分配的极不平均、各民族之间的毁灭性的工业战争，以及旧风尚、旧家庭关系和旧民族性的解体。</p><p>但是，这种社会主义按其实际内容来说，或者是企图恢复旧的生产资料和交换手段，从而恢复旧的所有制关系和旧的社会，或者是企图重新把现代的生产资料和交换手段硬塞到已被它们突破而且必然被突破的旧的所有制关系的框子里去。它在这两种场合都是反动的，同时又是空想的。</p><p>工业中的行会制度，农业中的宗法经济，——这就是它的结论。</p><p>这一思潮在它以后的发展中变成了一种怯懦的悲叹。</p><h4 id="（丙）德国的或“真正的”社会主义"><a href="#（丙）德国的或“真正的”社会主义" class="headerlink" title="（丙）德国的或“真正的”社会主义"></a>（丙）德国的或“真正的”社会主义</h4><p>法国的社会主义和共产主义的文献是在居于统治地位的资产阶级的压迫下产生的，并且是同这种统治作斗争的文字表现，这种文献被搬到德国的时候，那里的资产阶级才刚刚开始进行反对封建专制制度的斗争。</p><p>德国的哲学家、半哲学家和美文学家，贪婪地抓住了这种文献，不过他们忘记了：在这种著作从法国搬到德国的时候，法国的生活条件却没有同时搬过去。在德国的条件下，法国的文献完全失去了直接实践的意义，而只具有纯粹文献的形式。它必然表现为关于真正的社会、关于实现人的本质的无谓思辨。这样，第一次法国革命的要求，在18世纪的德国哲学家看来，不过是一般“实践理性”的要求，而革命的法国资产阶级的意志的表现，在他们心目中就是纯粹的意志、本来的意志、真正人的意志的规律。</p><p>德国著作家的唯一工作，就是把新的法国的思想同他们的旧的哲学信仰调和起来，或者毋宁说，就是从他们的哲学观点出发去掌握法国的思想。</p><p>这种掌握，就像掌握外国语一样，是通过翻译的。</p><p>大家知道，僧侣们曾经在古代异教经典的手抄本上面写上荒诞的天主教圣徒传。德国著作家对世俗的法国文献采取相反的作法。他们在法国的原著下面写上自己的哲学胡说。例如，他们在法国人对货币关系的批判下面写上“人的本质的外化”，在法国人对资产阶级国家的批判下面写上所谓“抽象普遍物的统治的扬弃”，等等。</p><p>这种在法国人的论述下面塞进自己哲学词句的做法，他们称之为“行动的哲学”、”真正的社会主义”、“德国的社会主义科学”、“社会主义的哲学论证”，等等。</p><p>法国的社会主义和共产主义的文献就这样被完全阉割了。既然这种文献在德国人手里已不再表现一个阶级反对另一个阶级的斗争，于是德国人就认为：他们克服了“法国人的片面性”，他们不代表真实的要求，而代表真理的要求，不代表无产者的利益，而代表人的本质的利益，即一般人的利益，这种人不属于任何阶级，根本不存在于现实界，而只存在于云雾弥漫的哲学幻想的太空。</p><p>这种曾经郑重其事地看待自己那一套拙劣的小学生作业并且大言不惭地加以吹嘘的德国社会主义，现在渐渐失去了它的自炫博学的天真。</p><p>德国的特别是普鲁士的资产阶级反对封建主和专制王朝的斗争，一句话，自由主义运动，越来越严重了。</p><p>于是，“真正的”社会主义就得到了一个好机会，把社会主义的要求同政治运动对立起来，用诅咒异端邪说的传统办法诅咒自由主义，诅咒代议制国家，诅咒资产阶级的竞争、资产阶级的新闻出版自由、资产阶级的法、资产阶级的自由和平等，并且向人民群众大肆宣扬，说什么在这个资产阶级运动中，人民群众非但一无所得，反而会失去一切。德国的社会主义恰好忘记了，法国的批判（德国的社会主义是这种批判的可怜的回声）是以现代的资产阶级社会以及相应的物质生活条件和相当的政治制度为前提的，而这一切前提当时在德国正是尚待争取的。</p><p>这种社会主义成了德意志各邦专制政府及其随从——僧侣、教员、容克和官僚求之不得的、吓唬来势汹汹的资产阶级的稻草人。</p><p>这种社会主义是这些政府用来镇压德国工人起义的毒辣的皮鞭和枪弹的甜蜜的补充。</p><p>既然“真正的”社会主义就这样成了这些政府对付德国资产阶级的武器，那么它也就直接代表了一种反动的利益，即德国小市民的利益。在德国，16世纪遗留下来的、从那时起经常以不同形式重新出现的小资产阶级，是现存制度的真实的社会基础。</p><p>保存这个小资产阶级，就是保存德国的现存制度。这个阶级胆战心惊地从资产阶级的工业统治和政治统治那里等候着无可幸免的灭亡，这一方面是由于资本的积聚，另一方面是由于革命无产阶级的兴起。在它看来，“真正的”社会主义能起一箭双雕的作用。“真正的”社会主义像瘟疫一样流行起来了。</p><p>德国的社会主义者给自己的那几条干瘪的“永恒真理”披上一件用思辨的蛛丝织成的、绣满华丽辞藻的花朵和浸透甜情蜜意的甘露的外衣，这件光彩夺目的外衣只是使他们的货物在这些顾客中间增加销路罢了。</p><p>同时，德国的社会主义也越来越认识到自己的使命就是充当这种小市民的夸夸其谈的代言人。</p><p>它宣布德意志民族是模范的民族，德国小市民是模范的人。它给这些小市民的每一种丑行都加上奥秘的、高尚的、社会主义的意义，使之变成完全相反的东西。它发展到最后，就直接反对共产主义的“野蛮破坏的”倾向，并且宣布自己是不偏不倚地超乎任何阶级斗争之上的。现今在德国流行的一切所谓社会主义和共产主义的著作，除了极少数的例外，都属于这一类卑鄙龌龊的、令人委靡的文献。</p><h3 id="2．保守的或资产阶级的社会主义"><a href="#2．保守的或资产阶级的社会主义" class="headerlink" title="2．保守的或资产阶级的社会主义"></a>2．保守的或资产阶级的社会主义</h3><p>资产阶级中的一部分人想要消除社会的弊病，以便保障资产阶级社会的生存。</p><p>这一部分人包括：经济学家、博爱主义者、人道主义者、劳动阶级状况改善派、慈善事业组织者、动物保护协会会员、戒酒协会发起人以及形形色色的小改良家。这种资产阶级的社会主义甚至被制成一些完整的体系。</p><p>我们可以举蒲鲁东的《贫困的哲学》作为例子。</p><p>社会主义的资产者愿意要现代社会的生存条件，但是不要由这些条件必然产生的斗争和危险。他们愿意要现存的社会，但是不要那些使这个社会革命化和瓦解的因素。他们愿意要资产阶级，但是不要无产阶级。在资产阶级看来，它所统治的世界自然是最美好的世界。资产阶级的社会主义把这种安慰人心的观念制成半套或整套的体系。它要求无产阶级实现它的体系，走进新的耶路撒冷，其实它不过是要求无产阶级停留在现今的社会里，但是要抛弃他们关于这个社会的可恶的观念。</p><p>这种社会主义的另一种不够系统、但是比较实际的形式，力图使工人阶级厌弃一切革命运动，硬说能给工人阶级带来好处的并不是这样或那样的政治改革，而仅仅是物质生活条件即经济关系的改变。但是，这种社会主义所理解的物质生活条件的改变，绝对不是只有通过革命的途径才能实现的资产阶级生产关系的废除，而是一些在这种生产关系的基础上实行的行政上的改良，因而丝毫不会改变资本和雇佣劳动的关系，至多只能减少资产阶级的统治费用和简化它的财政管理。</p><p>资产阶级的社会主义只有在它变成纯粹的演说辞令的时候，才获得自己的适当的表现。</p><p>自由贸易！为了工人阶级的利益；保护关税！为了工人阶级的利益；单身牢房！为了工人阶级的利益。——这才是资产阶级的社会主义唯一认真说出的最后的话。</p><p>资产阶级的社会主义就是这样一个论断：资产者之为资产者，是为了工人阶级的利益。</p><h3 id="3．批判的空想的社会主义和共产主义"><a href="#3．批判的空想的社会主义和共产主义" class="headerlink" title="3．批判的空想的社会主义和共产主义"></a>3．批判的空想的社会主义和共产主义</h3><p>在这里，我们不谈在现代一切大革命中表达过无产阶级要求的文献（巴贝夫等人的著作）。</p><p>无产阶级在普遍激动的时代、在推翻封建社会的时期直接实现自己阶级利益的最初尝试，都不可避免地遭到了失败，这是由于当时无产阶级本身还不够发展，由于无产阶级解放的物质条件还没具备，这些条件只是资产阶级时代的产物。随着这些早期的无产阶级运动而出现的革命文献，就其内容来说必然是反动的。这种文献倡导普遍的禁欲主义和粗陋的平均主义。</p><p>本来意义的社会主义和共产主义的体系，圣西门、傅立叶、欧文等人的体系，是在无产阶级和资产阶级之间的斗争还不发展的最初时期出现的。关于这个时期，我们在前面已经叙述过了（见《资产阶级和无产阶级》）。</p><p>诚然，这些体系的发明家看到了阶级的对立，以及占统治地位的社会本身中的瓦解因素的作用。但是，他们看不到无产阶级方面的任何历史主动性，看不到它所特有的任何政治运动。</p><p>由于阶级对立的发展是同工业的发展步调一致的，所以这些发明家也不可能看到无产阶级解放的物质条件，于是他们就去探求某种社会科学、社会规律，以便创造这些条件。</p><p>社会的活动要由他们个人的发明活动来代替，解放的历史条件要由幻想的条件来代替，无产阶级的逐步组织成为阶级要由一种特意设计出来的社会组织来代替。在他们看来，今后的世界历史不过是宣传和实施他们的社会计划。</p><p>诚然，他们也意识到，他们的计划主要是代表工人阶级这一受苦最深的阶级的利益。在他们心目中，无产阶级只是一个受苦最深的阶级。</p><p>但是，由于阶级斗争不发展，由于他们本身的生活状况，他们就以为自己是高高超乎这种阶级对立之上的。他们要改善社会一切成员的生活状况，甚至生活最优裕的成员也包括在内。因此，他们总是不加区别地向整个社会呼吁，而且主要是向统治阶级呼吁。他们以为，人们只要理解他们的体系，就会承认这种体系是最美好的社会的最美好的计划。</p><p>因此，他们拒绝一切政治行动，特别是一切革命行动；他们想通过和平的途径达到自己的目的，并且企图通过一些小型的、当然不会成功的试验，通过示范的力量来为新的社会福音开辟道路。</p><p>这种对未来社会的幻想的描绘，在无产阶级还很不发展、因而对本身的地位的认识还基于幻想的时候，是同无产阶级对社会普遍改造的最初的本能的渴望相适应的。</p><p>但是，这些社会主义和共产主义的著作也含有批判的成分。这些著作抨击现存社会的全部基础。因此，它们提供了启发工人觉悟的极为宝贵的材料。它们关于未来社会的积极的主张，例如消灭城乡对立，消灭家庭，消灭私人营利，消灭雇佣劳动，提倡社会和谐，把国家变成纯粹的生产管理机构，——所有这些主张都只是表明要消灭阶级对立，而这种阶级对立在当时刚刚开始发展，它们所知道的只是这种对立的早期的、不明显的、不确定的形式。因此，这些主张本身还带有纯粹空想的性质。</p><p>批判的空想的社会主义和共产主义的意义，是同历史的发展成反比的。阶级斗争越发展和越具有确定的形式，这种超乎阶级斗争的幻想，这种反对阶级斗争的幻想，就越失去任何实践意义和任何理论根据。所以，虽然这些体系的创始人在许多方面是革命的，但是他们的信徒总是组成一些反动的宗派。这些信徒无视无产阶级的历史进展，还是死守着老师们的旧观点。因此，他们一贯企图削弱阶级斗争，调和对立。他们还总是梦想用试验的办法来实现自己的社会空想，创办单个的法伦斯泰尔，建立国内移民区，创立小伊加利亚，即袖珍版的新耶路撒冷，——而为了建造这一切空中楼阁，他们就不得不呼吁资产阶级发善心和慷慨解囊。他们逐渐地堕落到上述反动的或保守的社会主义者的一伙中去了，所不同的只是他们更加系统地卖弄学问，狂热地迷信自己那一套社会科学的奇功异效。</p><p>因此，他们激烈地反对工人的一切政治运动，认为这种运动只是由于盲目地不相信新福音才发生的。</p><p>在英国，有欧文主义者反对宪章派，在法国，有傅立叶主义者反对改革派。</p><h2 id="四、共产党人对各种反对党派的态度"><a href="#四、共产党人对各种反对党派的态度" class="headerlink" title="四、共产党人对各种反对党派的态度"></a>四、共产党人对各种反对党派的态度</h2><p>看过第二章之后，就可以了解共产党人同已经形成的工人政党的关系，因而也就可以了解他们同英国宪章派和北美土地改革派的关系。</p><p>共产党人为工人阶级的最近的目的和利益而斗争，但是他们在当前的运动中同时代表运动的未来。在法国，共产党人同社会主义民主党联合起来反对保守的和激进的资产阶级，但是并不因此放弃对那些从革命的传统中承袭下来的空谈和幻想采取批判态度的权利。</p><p>在瑞士，共产党人支持激进派，但是并不忽略这个政党是由互相矛盾的分子组成的，其中一部分是法国式的民主社会主义者，一部分是激进的资产者。</p><p>在波兰人中间，共产党人支持那个把土地革命当作民族解放的条件的政党，即发动过1846年克拉科夫起义的政党。</p><p>在德国，只要资产阶级采取革命的行动，共产党就同它一起去反对专制君主制、封建土地所有制和小市民的反动性。</p><p>但是，共产党一分钟也不忽略教育工人尽可能明确地意识到资产阶级和无产阶级的敌对的对立，以便德国工人能够立刻利用资产阶级统治所必然带来的社会的和政治的条件作为反对资产阶级的武器，以便在推翻德国的反动阶级之后立即开始反对资产阶级本身的斗争。</p><p>共产党人把自己的主要注意力集中在德国，因为德国正处在资产阶级革命的前夜，因为同17世纪的英国和18世纪的法国相比，德国将在整个欧洲文明更进步的条件下，拥有发展得多的无产阶级去实现这个变革，因而德国的资产阶级革命只能是无产阶级革命的直接序幕。</p><p>总之，共产党人到处都支持一切反对现存的社会制度和政治制度的革命运动。</p><p>在所有这些运动中，他们都强调所有制问题是运动的基本问题，不管这个问题的发展程度怎样。</p><p>最后，共产党人到处都努力争取全世界民主政党之间的团结和协调。</p><p>共产党人不屑于隐瞒自己的观点和意图。他们公开宣布：他们的目的只有用暴力推翻全部现存的社会制度才能达到。让统治阶级在共产主义革命面前发抖吧。无产者在这个革命中失去的只是锁链。他们获得的将是整个世界。</p><p><strong>全世界无产者，联合起来！</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
